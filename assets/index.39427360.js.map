{"version":3,"file":"index.39427360.js","sources":["../../node_modules/@mcschema/java-1.18/lib/Collections.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.18/lib/schemas/assets/Model.js","../../node_modules/@mcschema/java-1.18/lib/schemas/assets/BlockDefinition.js","../../node_modules/@mcschema/java-1.18/lib/schemas/assets/Font.js","../../node_modules/@mcschema/java-1.18/lib/schemas/assets/index.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Dimension.js","../../node_modules/@mcschema/java-1.18/lib/schemas/DimensionType.js","../../node_modules/@mcschema/java-1.18/lib/schemas/ItemModifier.js","../../node_modules/@mcschema/java-1.18/lib/LootContext.js","../../node_modules/@mcschema/java-1.18/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.18/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.18/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Biome.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Carver.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Decorator.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/ProcessorList.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Feature.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/NoiseSettings.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/StructureFeature.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/SurfaceRule.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/TemplatePool.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/index.js","../../node_modules/@mcschema/java-1.18/lib/schemas/WorldSettings.js","../../node_modules/@mcschema/java-1.18/lib/schemas/index.js","../../node_modules/@mcschema/java-1.18/lib/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:fall_from_height',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:item_used_on_block',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:lightning_strike',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_generates_container_loot',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_interacted_with_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:ride_entity_in_lava',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:started_riding',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:target_hit',\r\n        'minecraft:tick',\r\n        'minecraft:thrown_item_picked_up_by_entity',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:using_item',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'killer',\r\n        'direct_killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('map_feature', [\r\n        'bastion_remnant',\r\n        'buried_treasure',\r\n        'desert_pyramid',\r\n        'endcity',\r\n        'fortress',\r\n        'igloo',\r\n        'jungle_pyramid',\r\n        'mansion',\r\n        'mineshaft',\r\n        'monument',\r\n        'nether_fossil',\r\n        'ocean_ruin',\r\n        'pillager_outpost',\r\n        'ruined_portal',\r\n        'shipwreck',\r\n        'stronghold',\r\n        'swamp_hut',\r\n        'village'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('biome_category', [\r\n        'beach',\r\n        'desert',\r\n        'extreme_hills',\r\n        'forest',\r\n        'icy',\r\n        'jungle',\r\n        'mesa',\r\n        'mountain',\r\n        'mushroom',\r\n        'nether',\r\n        'none',\r\n        'ocean',\r\n        'plains',\r\n        'river',\r\n        'savanna',\r\n        'swamp',\r\n        'taiga',\r\n        'the_end',\r\n        'underground'\r\n    ]);\r\n    collections.register('heightmap_type', [\r\n        'MOTION_BLOCKING',\r\n        'MOTION_BLOCKING_NO_LEAVES',\r\n        'OCEAN_FLOOR',\r\n        'OCEAN_FLOOR_WG',\r\n        'WORLD_SURFACE',\r\n        'WORLD_SURFACE_WG'\r\n    ]);\r\n    collections.register('generation_step', [\r\n        'air',\r\n        'liquid'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n    collections.register('banner_pattern', [\r\n        'base',\r\n        'square_bottom_left',\r\n        'square_bottom_right',\r\n        'square_top_left',\r\n        'square_top_right',\r\n        'stripe_bottom',\r\n        'stripe_top',\r\n        'stripe_left',\r\n        'stripe_right',\r\n        'stripe_center',\r\n        'stripe_middle',\r\n        'stripe_downright',\r\n        'stripe_downleft',\r\n        'small_stripes',\r\n        'cross',\r\n        'straight_cross',\r\n        'triangle_bottom',\r\n        'triangle_top',\r\n        'triangles_bottom',\r\n        'triangles_top',\r\n        'diagonal_left',\r\n        'diagonal_up_right',\r\n        'diagonal_up_left',\r\n        'diagonal_right',\r\n        'circle',\r\n        'rhombus',\r\n        'half_vertical',\r\n        'half_horizontal',\r\n        'half_vertical_right',\r\n        'half_horizontal_bottom',\r\n        'border',\r\n        'curly_border',\r\n        'gradient',\r\n        'gradient_up',\r\n        'bricks',\r\n        'globe',\r\n        'creeper',\r\n        'skull',\r\n        'flower',\r\n        'mojang',\r\n        'piglin'\r\n    ]);\r\n    collections.register('dye_color', [\r\n        'white',\r\n        'orange',\r\n        'magenta',\r\n        'light_blue',\r\n        'yellow',\r\n        'lime',\r\n        'pink',\r\n        'gray',\r\n        'light_gray',\r\n        'cyan',\r\n        'purple',\r\n        'blue',\r\n        'brown',\r\n        'green',\r\n        'red',\r\n        'black'\r\n    ]);\r\n    collections.register('cave_surface', [\r\n        'floor',\r\n        'ceiling'\r\n    ]);\r\n    collections.register('direction', [\r\n        'down',\r\n        'up',\r\n        'north',\r\n        'east',\r\n        'south',\r\n        'west'\r\n    ]);\r\n    collections.register('axis', [\r\n        'x',\r\n        'y',\r\n        'z'\r\n    ]);\r\n    collections.register('display_position', [\r\n        'firstperson_righthand',\r\n        'firstperson_lefthand',\r\n        'thirdperson_righthand',\r\n        'thirdperson_lefthand',\r\n        'gui',\r\n        'head',\r\n        'ground',\r\n        'fixed'\r\n    ]);\r\n    collections.register('gui_light', [\r\n        'front',\r\n        'side'\r\n    ]);\r\n    collections.register('item_model_predicates', [\r\n        'angle',\r\n        'blocking',\r\n        'broken',\r\n        'cast',\r\n        'charged',\r\n        'cooldown',\r\n        'custom_model_data',\r\n        'damage',\r\n        'damaged',\r\n        'firework',\r\n        'lefthanded',\r\n        'pull',\r\n        'pulling',\r\n        'throwing',\r\n        'time'\r\n    ]);\r\n    collections.register('glyph_provider_type', [\r\n        'bitmap',\r\n        'ttf',\r\n        'legacy_unicode',\r\n    ]);\r\n    collections.register('cat_texture', [\r\n        'textures/entity/cat/tabby.png',\r\n        'textures/entity/cat/black.png',\r\n        'textures/entity/cat/red.png',\r\n        'textures/entity/cat/siamese.png',\r\n        'textures/entity/cat/british_shorthair.png',\r\n        'textures/entity/cat/calico.png',\r\n        'textures/entity/cat/persian.png',\r\n        'textures/entity/cat/ragdoll.png',\r\n        'textures/entity/cat/white.png',\r\n        'textures/entity/cat/jellie.png',\r\n        'textures/entity/cat/all_black.png'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const EntityPredicate = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.Opt)(Reference('entity_predicate')),\r\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)(Reference('condition')),\r\n            change: v => [{\r\n                    condition: 'minecraft:entity_properties',\r\n                    predicate: v\r\n                }]\r\n        }\r\n    ], { context: 'conditions' });\r\n    schemas.register('advancement', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        display: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.ObjectNode)({\r\n            icon: (0, core_1.ObjectNode)({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: (0, core_1.Opt)(StringNode()),\r\n            frame: (0, core_1.Opt)(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            announce_to_chat: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            hidden: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: (0, core_1.MapNode)(StringNode(), Reference('advancement_criteria')),\r\n        requirements: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ListNode)(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            function: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', (0, core_1.ObjectNode)({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            player: (0, core_1.Mod)(EntityPredicate, {\r\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\r\n            }),\r\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: EntityPredicate,\r\n                    partner: EntityPredicate,\r\n                    child: EntityPredicate\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n                    to: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: (0, core_1.Opt)((0, core_1.ListNode)(EntityPredicate))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: Reference('int_bounds')\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: EntityPredicate,\r\n                    zombie: EntityPredicate\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate'))),\r\n                    source: (0, core_1.Opt)(EntityPredicate)\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: Reference('int_bounds'),\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: (0, core_1.Opt)(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: (0, core_1.Opt)(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:fall_from_height': {\r\n                    start_position: (0, core_1.Opt)(Reference('location_predicate')),\r\n                    distance: (0, core_1.Opt)(Reference('distance_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: EntityPredicate,\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': {\r\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\r\n                },\r\n                'minecraft:inventory_changed': {\r\n                    slots: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                        empty: Reference('int_bounds'),\r\n                        occupied: Reference('int_bounds'),\r\n                        full: Reference('int_bounds')\r\n                    })),\r\n                    items: (0, core_1.Opt)((0, core_1.ListNode)(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: Reference('int_bounds'),\r\n                    durability: Reference('int_bounds'),\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:item_used_on_block': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\r\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: Reference('int_bounds'),\r\n                    victims: (0, core_1.Opt)((0, core_1.ListNode)(EntityPredicate))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: (0, core_1.Opt)(Reference('distance_predicate')),\r\n                    duration: Reference('int_bounds')\r\n                },\r\n                'minecraft:lightning_strike': {\r\n                    lightning: EntityPredicate,\r\n                    bystander: EntityPredicate,\r\n                },\r\n                'minecraft:location': {\r\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\r\n                },\r\n                'minecraft:nether_travel': {\r\n                    start_position: (0, core_1.Opt)(Reference('location_predicate')),\r\n                    distance: (0, core_1.Opt)(Reference('distance_predicate')),\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\r\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_generates_container_loot': {\r\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: (0, core_1.Opt)(Reference('damage_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_interacted_with_entity': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: (0, core_1.Opt)(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:ride_entity_in_lava': {\r\n                    start_position: (0, core_1.Opt)(Reference('location_predicate')),\r\n                    distance: (0, core_1.Opt)(Reference('distance_predicate'))\r\n                },\r\n                'minecraft:slept_in_bed': {\r\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\r\n                },\r\n                'minecraft:slide_down_block': {\r\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:target_hit': {\r\n                    projectile: EntityPredicate,\r\n                    shooter: EntityPredicate,\r\n                    signal_strength: Reference('int_bounds')\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_entity': {\r\n                    entity: EntityPredicate,\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: (0, core_1.Opt)(Reference('float_bounds'))\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:using_item': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: EntityPredicate,\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': {\r\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\r\n                }\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initModelSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initModelSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Vec = (length, min, max) => (0, core_1.ListNode)((0, core_1.NumberNode)({ min, max }), { minLength: length, maxLength: length });\r\n    const Texture = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'alias',\r\n            match: (v) => typeof v === 'string' && v.startsWith('#'),\r\n            node: StringNode(),\r\n            change: (v) => typeof v === 'string' ? `#${v}` : \"#0\"\r\n        },\r\n        {\r\n            type: 'reference',\r\n            match: (v) => typeof v === 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$texture' } }),\r\n            change: (v) => typeof v === 'string' ? v.replace(/^#/, '') : \"\"\r\n        }\r\n    ], { choiceContext: 'texture' });\r\n    schemas.register('model', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        parent: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$model' } })),\r\n        ambientocclusion: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        gui_light: (0, core_1.Opt)(StringNode({ enum: 'gui_light' })),\r\n        textures: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), Texture)),\r\n        elements: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n            from: Vec(3, -16, 32),\r\n            to: Vec(3, -16, 32),\r\n            rotation: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                origin: Vec(3),\r\n                axis: StringNode({ enum: 'axis' }),\r\n                angle: (0, core_1.NumberEnum)({ values: [-45, -22.5, 0, 22.5, 45] }),\r\n                rescale: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            })),\r\n            shade: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            faces: (0, core_1.MapNode)(StringNode({ enum: 'direction' }), (0, core_1.ObjectNode)({\r\n                texture: Texture,\r\n                uv: (0, core_1.Opt)(Vec(4)),\r\n                cullface: (0, core_1.Opt)(StringNode({ enum: 'direction' })),\r\n                rotation: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                tintindex: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            }))\r\n        }, { context: 'model_element' }))),\r\n        display: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ enum: 'display_position' }), (0, core_1.ObjectNode)({\r\n            rotation: Vec(3),\r\n            translation: Vec(3, -80, 80),\r\n            scale: Vec(3, -4, 4)\r\n        }, { context: 'item_transform' }))),\r\n        overrides: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n            predicate: (0, core_1.MapNode)(StringNode({ enum: 'item_model_predicates' }), (0, core_1.NumberNode)()),\r\n            model: StringNode({ validator: 'resource', params: { pool: '$model' } })\r\n        }, { context: 'model_override' })))\r\n    }, { context: 'model' }), {\r\n        default: () => ({\r\n            parent: 'minecraft:item/generated',\r\n            textures: {\r\n                layer0: 'minecraft:item/diamond'\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initModelSchemas = initModelSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBlockDefinitionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBlockDefinitionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('block_definition', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'variants',\r\n            match: (v) => v.variants !== undefined,\r\n            node: (0, core_1.ObjectNode)({\r\n                variants: (0, core_1.MapNode)(StringNode(), Reference('model_variant'))\r\n            }),\r\n            change: (v) => ({ variants: { \"\": {} } })\r\n        },\r\n        {\r\n            type: 'multipart',\r\n            match: (v) => v.multipart !== undefined,\r\n            node: (0, core_1.ObjectNode)({\r\n                multipart: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    when: (0, core_1.Opt)(Reference('multipart_condition')),\r\n                    apply: Reference('model_variant'),\r\n                }))\r\n            }),\r\n            change: (v) => ({ multipart: { when: {}, apply: {} } })\r\n        }\r\n    ], { context: 'block_definition' }), {\r\n        default: () => ({\r\n            variants: {\r\n                \"\": {\r\n                    model: 'minecraft:block/stone'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    const VariantChildren = {\r\n        model: StringNode({ validator: 'resource', params: { pool: '$model' } }),\r\n        x: (0, core_1.Opt)((0, core_1.NumberEnum)({ integer: true, values: [0, 90, 180, 270] })),\r\n        y: (0, core_1.Opt)((0, core_1.NumberEnum)({ integer: true, values: [0, 90, 180, 270] })),\r\n        uvlock: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n    };\r\n    schemas.register('model_variant', (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)(VariantChildren),\r\n            change: (v) => Array.isArray(v) && v.length > 0 ? v[0] : ({})\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                ...VariantChildren,\r\n                weight: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\r\n            }, { context: 'model_variant' })),\r\n            change: (v) => [{ weight: 1, ...v }]\r\n        }\r\n    ], { context: 'model_variant' }));\r\n    schemas.register('multipart_condition', (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            priority: -1,\r\n            match: () => true,\r\n            node: (0, core_1.MapNode)(StringNode(), StringNode()),\r\n            change: (v) => typeof v === 'object' && Array.isArray(v === null || v === void 0 ? void 0 : v.OR) && v.OR.length > 0 ? v.OR[0] : ({})\r\n        },\r\n        {\r\n            type: 'or',\r\n            match: (v) => typeof v === 'object' && (v === null || v === void 0 ? void 0 : v.OR) !== undefined,\r\n            node: (0, core_1.ObjectNode)({\r\n                OR: (0, core_1.ListNode)(Reference('multipart_condition'))\r\n            }),\r\n            change: (v) => ({ OR: [v !== null && v !== void 0 ? v : {}] })\r\n        }\r\n    ], { context: 'multipart_condition' }));\r\n}\r\nexports.initBlockDefinitionSchemas = initBlockDefinitionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFontSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initFontSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('font', (0, core_1.ObjectNode)({\r\n        providers: (0, core_1.ListNode)(Reference('glyph_provider'))\r\n    }, { context: 'font' }));\r\n    schemas.register('glyph_provider', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ enum: 'glyph_provider_type' }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'bitmap': {\r\n                file: StringNode({ validator: 'resource', params: { pool: '$texture', suffix: '.png' } }),\r\n                height: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                ascent: (0, core_1.NumberNode)({ integer: true }),\r\n                chars: (0, core_1.ListNode)(StringNode(), { minLength: 1 })\r\n            },\r\n            'ttf': {\r\n                file: StringNode({ validator: 'resource', params: { pool: '$texture', suffix: '.png' } }),\r\n                size: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                oversample: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                shift: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.NumberNode)(), { minLength: 2, maxLength: 2 })),\r\n                skip: (0, core_1.Opt)((0, core_1.StringOrList)(StringNode()))\r\n            },\r\n            'legacy_unicode': {\r\n                sizes: StringNode(),\r\n                template: StringNode()\r\n            }\r\n        }\r\n    }, { context: 'glyph_provider' }), {\r\n        default: () => ({\r\n            type: 'bitmap',\r\n        }),\r\n    }));\r\n}\r\nexports.initFontSchemas = initFontSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAssetsSchemas = void 0;\r\nconst Model_1 = require(\"./Model\");\r\nconst BlockDefinition_1 = require(\"./BlockDefinition\");\r\nconst Font_1 = require(\"./Font\");\r\nfunction initAssetsSchemas(schemas, collections) {\r\n    (0, BlockDefinition_1.initBlockDefinitionSchemas)(schemas, collections);\r\n    (0, Font_1.initFontSchemas)(schemas, collections);\r\n    (0, Model_1.initModelSchemas)(schemas, collections);\r\n}\r\nexports.initAssetsSchemas = initAssetsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.InclusiveRange = exports.IntProvider = exports.FloatProvider = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.DimensionTypePresets = exports.DefaultDimensionType = exports.FunctionCases = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nexports.DefaultDimensionType = {\r\n    ultrawarm: false,\r\n    natural: true,\r\n    piglin_safe: false,\r\n    respawn_anchor_works: false,\r\n    bed_works: true,\r\n    has_raids: true,\r\n    has_skylight: true,\r\n    has_ceiling: false,\r\n    coordinate_scale: 1,\r\n    ambient_light: 0,\r\n    logical_height: 256,\r\n    infiniburn: 'minecraft:infiniburn_overworld',\r\n    min_y: 0,\r\n    height: 256,\r\n};\r\nconst DefaultStructureSettings = {\r\n    'minecraft:igloo': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 14357618\r\n    },\r\n    'minecraft:mansion': {\r\n        spacing: 80,\r\n        separation: 20,\r\n        salt: 10387319\r\n    },\r\n    'minecraft:jungle_pyramid': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 14357619\r\n    },\r\n    'minecraft:nether_fossil': {\r\n        spacing: 2,\r\n        separation: 1,\r\n        salt: 14357921\r\n    },\r\n    'minecraft:stronghold': {\r\n        spacing: 1,\r\n        separation: 0,\r\n        salt: 0\r\n    },\r\n    'minecraft:shipwreck': {\r\n        spacing: 24,\r\n        separation: 4,\r\n        salt: 165745295\r\n    },\r\n    'minecraft:mineshaft': {\r\n        spacing: 1,\r\n        separation: 0,\r\n        salt: 0\r\n    },\r\n    'minecraft:desert_pyramid': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 14357617\r\n    },\r\n    'minecraft:ruined_portal': {\r\n        spacing: 40,\r\n        separation: 15,\r\n        salt: 34222645\r\n    },\r\n    'minecraft:fortress': {\r\n        spacing: 27,\r\n        separation: 4,\r\n        salt: 30084232\r\n    },\r\n    'minecraft:pillager_outpost': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 165745296\r\n    },\r\n    'minecraft:village': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 10387312\r\n    },\r\n    'minecraft:endcity': {\r\n        spacing: 20,\r\n        separation: 11,\r\n        salt: 10387313\r\n    },\r\n    'minecraft:buried_treasure': {\r\n        spacing: 1,\r\n        separation: 0,\r\n        salt: 0\r\n    },\r\n    'minecraft:ocean_ruin': {\r\n        spacing: 20,\r\n        separation: 8,\r\n        salt: 14357621\r\n    },\r\n    'minecraft:bastion_remnant': {\r\n        spacing: 27,\r\n        separation: 4,\r\n        salt: 30084232\r\n    },\r\n    'minecraft:swamp_hut': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 14357620\r\n    },\r\n    'minecraft:monument': {\r\n        spacing: 32,\r\n        separation: 5,\r\n        salt: 10387313\r\n    }\r\n};\r\nexports.DefaultNoiseSettings = {\r\n    bedrock_roof_position: -2147483648,\r\n    bedrock_floor_position: 0,\r\n    sea_level: 63,\r\n    noise_caves_enabled: true,\r\n    deepslate_enabled: true,\r\n    ore_veins_enabled: true,\r\n    noodle_caves_enabled: true,\r\n    disable_mob_generation: false,\r\n    aquifers_enabled: true,\r\n    default_block: {\r\n        Name: 'minecraft:stone'\r\n    },\r\n    default_fluid: {\r\n        Properties: {\r\n            level: '0'\r\n        },\r\n        Name: 'minecraft:water'\r\n    },\r\n    noise: {\r\n        min_y: -64,\r\n        height: 384,\r\n        size_horizontal: 1,\r\n        size_vertical: 2,\r\n        density_factor: 1,\r\n        density_offset: -0.51875,\r\n        top_slide: {\r\n            target: -0.078125,\r\n            size: 2,\r\n            offset: 8\r\n        },\r\n        bottom_slide: {\r\n            target: 0.1171875,\r\n            size: 3,\r\n            offset: 0\r\n        },\r\n        sampling: {\r\n            xz_scale: 0.9999999814507745,\r\n            y_scale: 0.9999999814507745,\r\n            xz_factor: 80,\r\n            y_factor: 160\r\n        },\r\n        terrain_shaper: {\r\n            offset: 0,\r\n            factor: 0,\r\n            jaggedness: 0\r\n        }\r\n    },\r\n    surface_rule: {\r\n        type: 'minecraft:sequence',\r\n        sequence: []\r\n    },\r\n    structures: {\r\n        stronghold: {\r\n            distance: 32,\r\n            spread: 3,\r\n            count: 128\r\n        },\r\n        structures: DefaultStructureSettings,\r\n    }\r\n};\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', (0, core_1.Mod)((0, core_1.ListNode)((0, core_1.NumberNode)({ integer: true }), { minLength: 3, maxLength: 3 }), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    const Bounds = (integer) => (0, core_1.Opt)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)({ integer }),\r\n            change: (v) => { var _a, _b; return v === undefined ? 0 : (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 0; }\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.Opt)((0, core_1.NumberNode)({ integer })),\r\n                max: (0, core_1.Opt)((0, core_1.NumberNode)({ integer }))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: v !== null && v !== void 0 ? v : 0,\r\n                max: v !== null && v !== void 0 ? v : 0\r\n            })\r\n        }\r\n    ]));\r\n    schemas.register('int_bounds', Bounds(true));\r\n    schemas.register('float_bounds', Bounds());\r\n    schemas.register('int_range', (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.Opt)(Reference('number_provider')),\r\n                max: (0, core_1.Opt)(Reference('number_provider'))\r\n            })\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)({ integer: true })\r\n        }\r\n    ], { context: 'range' }));\r\n    const ObjectWithType = (pool, directType, directPath, directDefault, objectDefault, context, cases) => {\r\n        let defaultCase = {};\r\n        if (objectDefault) {\r\n            Object.keys(cases[objectDefault]).forEach(k => {\r\n                defaultCase[k] = (0, core_1.Mod)(cases[objectDefault][k], {\r\n                    enabled: path => path.push('type').get() === undefined\r\n                });\r\n            });\r\n        }\r\n        const provider = (0, core_1.ObjectNode)({\r\n            type: (0, core_1.Mod)((0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool } })), {\r\n                hidden: () => true\r\n            }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: cases,\r\n            ...defaultCase\r\n        }, { context, disableSwitchContext: true });\r\n        const choices = [{\r\n                type: directType,\r\n                node: cases[directDefault][directPath]\r\n            }];\r\n        if (objectDefault) {\r\n            choices.push({\r\n                type: 'object',\r\n                priority: -1,\r\n                node: provider\r\n            });\r\n        }\r\n        Object.keys(cases).forEach(k => {\r\n            choices.push({\r\n                type: k,\r\n                match: (v) => {\r\n                    var _a;\r\n                    const type = 'minecraft:' + ((_a = v === null || v === void 0 ? void 0 : v.type) === null || _a === void 0 ? void 0 : _a.replace(/^minecraft:/, ''));\r\n                    if (type === k)\r\n                        return true;\r\n                    const keys = v ? Object.keys(v) : [];\r\n                    return typeof v === 'object' && ((keys === null || keys === void 0 ? void 0 : keys.length) === 0 || ((keys === null || keys === void 0 ? void 0 : keys.length) === 1 && (keys === null || keys === void 0 ? void 0 : keys[0]) === 'type'));\r\n                },\r\n                node: provider,\r\n                change: (v) => ({ type: k })\r\n            });\r\n        });\r\n        return (0, core_1.ChoiceNode)(choices, { context, choiceContext: `${context}.type` });\r\n    };\r\n    schemas.register('number_provider', ObjectWithType('loot_number_provider_type', 'number', 'value', 'minecraft:constant', 'minecraft:uniform', 'number_provider', {\r\n        'minecraft:constant': {\r\n            value: (0, core_1.NumberNode)()\r\n        },\r\n        'minecraft:uniform': {\r\n            min: Reference('number_provider'),\r\n            max: Reference('number_provider')\r\n        },\r\n        'minecraft:binomial': {\r\n            n: Reference('number_provider'),\r\n            p: Reference('number_provider')\r\n        },\r\n        'minecraft:score': {\r\n            target: Reference('scoreboard_name_provider'),\r\n            score: StringNode({ validator: 'objective' }),\r\n            scale: (0, core_1.Opt)((0, core_1.NumberNode)())\r\n        }\r\n    }));\r\n    schemas.register('scoreboard_name_provider', ObjectWithType('loot_score_provider_type', 'string', 'target', 'minecraft:context', null, 'score_provider', {\r\n        'minecraft:fixed': {\r\n            name: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities', isScoreHolder: true } }) // FIXME: doesn't support selectors\r\n        },\r\n        'minecraft:context': {\r\n            target: (0, core_1.Mod)(StringNode({ enum: 'entity_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    schemas.register('nbt_provider', ObjectWithType('loot_nbt_provider_type', 'string', 'target', 'minecraft:context', null, 'nbt_provider', {\r\n        'minecraft:storage': {\r\n            source: StringNode({ validator: 'resource', params: { pool: '$storage' } })\r\n        },\r\n        'minecraft:context': {\r\n            target: (0, core_1.Mod)(StringNode({ enum: 'copy_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    exports.FloatProvider = (config) => ObjectWithType('float_provider_type', 'number', 'value', 'minecraft:constant', null, 'float_provider', {\r\n        'minecraft:constant': {\r\n            value: (0, core_1.NumberNode)(config)\r\n        },\r\n        'minecraft:uniform': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)(config),\r\n                max_exclusive: (0, core_1.NumberNode)(config)\r\n            })\r\n        },\r\n        'minecraft:clamped_normal': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.NumberNode)(),\r\n                max: (0, core_1.NumberNode)(),\r\n                mean: (0, core_1.NumberNode)(),\r\n                deviation: (0, core_1.NumberNode)()\r\n            })\r\n        },\r\n        'minecraft:trapezoid': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.NumberNode)(),\r\n                max: (0, core_1.NumberNode)(),\r\n                plateau: (0, core_1.NumberNode)()\r\n            })\r\n        }\r\n    });\r\n    schemas.register('float_provider', (0, exports.FloatProvider)());\r\n    exports.IntProvider = (config) => ObjectWithType('int_provider_type', 'number', 'value', 'minecraft:constant', null, 'int_provider', {\r\n        'minecraft:constant': {\r\n            value: (0, core_1.NumberNode)({ integer: true, ...config })\r\n        },\r\n        'minecraft:uniform': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:clamped': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                source: Reference('int_provider')\r\n            })\r\n        },\r\n        'minecraft:clamped_normal': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                mean: (0, core_1.NumberNode)(),\r\n                deviation: (0, core_1.NumberNode)()\r\n            })\r\n        },\r\n        'minecraft:weighted_list': {\r\n            distribution: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                weight: (0, core_1.NumberNode)({ integer: true }),\r\n                data: Reference('int_provider'),\r\n            }))\r\n        }\r\n    });\r\n    schemas.register('int_provider', (0, exports.IntProvider)());\r\n    schemas.register('vertical_anchor', (0, core_1.ChoiceNode)(['absolute', 'above_bottom', 'below_top'].map(t => ({\r\n        type: t,\r\n        match: v => (v === null || v === void 0 ? void 0 : v[t]) !== undefined,\r\n        change: v => { var _a, _b, _c; return ({ [t]: (_c = (_b = (_a = v.absolute) !== null && _a !== void 0 ? _a : v.above_bottom) !== null && _b !== void 0 ? _b : v.below_top) !== null && _c !== void 0 ? _c : 0 }); },\r\n        node: (0, core_1.ObjectNode)({\r\n            [t]: (0, core_1.NumberNode)({ integer: true, min: -2048, max: 2047 })\r\n        })\r\n    })), { context: 'vertical_anchor' }));\r\n    schemas.register('height_provider', ObjectWithType('height_provider_type', 'number', 'value', 'minecraft:constant', null, 'height_provider', {\r\n        'minecraft:constant': {\r\n            value: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:uniform': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:very_biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:trapezoid': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            plateau: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n        },\r\n        'minecraft:weighted_list': {\r\n            distribution: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                weight: (0, core_1.NumberNode)({ integer: true }),\r\n                data: Reference('height_provider'),\r\n            }))\r\n        }\r\n    }));\r\n    exports.InclusiveRange = (config) => (0, core_1.ObjectNode)({\r\n        min_inclusive: (0, core_1.NumberNode)(config),\r\n        max_inclusive: (0, core_1.NumberNode)(config)\r\n    }, { context: 'range' });\r\n    schemas.register('noise_parameters', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        firstOctave: (0, core_1.NumberNode)({ integer: true }),\r\n        amplitudes: (0, core_1.ListNode)((0, core_1.NumberNode)())\r\n    }, { context: 'noise_parameters' }), {\r\n        default: () => ({\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1]\r\n        })\r\n    }));\r\n    exports.ConditionCases = (entitySourceNode = StringNode({ enum: 'entity_source' })) => ({\r\n        'minecraft:alternative': {\r\n            terms: (0, core_1.ListNode)(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: (0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: entitySourceNode,\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: entitySourceNode,\r\n            scores: (0, core_1.MapNode)(StringNode({ validator: 'objective' }), Reference('int_range'))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n            offsetY: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n            offsetZ: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n            looting_multiplier: (0, core_1.NumberNode)()\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: (0, core_1.ListNode)((0, core_1.NumberNode)({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: Reference('int_range'),\r\n            period: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n        },\r\n        'minecraft:value_check': {\r\n            value: Reference('number_provider'),\r\n            range: Reference('int_range')\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            thundering: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n        }\r\n    });\r\n    exports.FunctionCases = (conditions, copySourceNode = StringNode({ enum: 'copy_source' }), entitySourceNode = StringNode({ enum: 'entity_source' })) => {\r\n        const cases = {\r\n            'minecraft:apply_bonus': {\r\n                enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                parameters: (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n                    bonusMultiplier: (0, core_1.Mod)((0, core_1.NumberNode)(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                    }),\r\n                    extra: (0, core_1.Mod)((0, core_1.NumberNode)(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    }),\r\n                    probability: (0, core_1.Mod)((0, core_1.NumberNode)(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    })\r\n                }), {\r\n                    enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                })\r\n            },\r\n            'minecraft:copy_name': {\r\n                source: copySourceNode\r\n            },\r\n            'minecraft:copy_nbt': {\r\n                source: Reference('nbt_provider'),\r\n                ops: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                    target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                    op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                }, { context: 'nbt_operation' }))\r\n            },\r\n            'minecraft:copy_state': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                properties: (0, core_1.ListNode)(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } }))\r\n            },\r\n            'minecraft:enchant_randomly': {\r\n                enchantments: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })))\r\n            },\r\n            'minecraft:enchant_with_levels': {\r\n                levels: Reference('number_provider'),\r\n                treasure: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:exploration_map': {\r\n                destination: (0, core_1.Opt)(StringNode({ enum: 'map_feature' })),\r\n                decoration: (0, core_1.Opt)(StringNode({ enum: 'map_decoration' })),\r\n                zoom: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                search_radius: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                skip_existing_chunks: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:fill_player_head': {\r\n                entity: entitySourceNode\r\n            },\r\n            'minecraft:limit_count': {\r\n                limit: Reference('int_range')\r\n            },\r\n            'minecraft:looting_enchant': {\r\n                count: Reference('number_provider'),\r\n                limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            },\r\n            'minecraft:set_attributes': {\r\n                modifiers: (0, core_1.ListNode)(Reference('attribute_modifier'))\r\n            },\r\n            'minecraft:set_banner_pattern': {\r\n                patterns: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    pattern: StringNode({ enum: 'banner_pattern' }),\r\n                    color: StringNode({ enum: 'dye_color' })\r\n                })),\r\n                append: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_contents': {\r\n                type: StringNode({ validator: 'resource', params: { pool: 'block_entity_type' } }),\r\n                entries: (0, core_1.ListNode)(Reference('loot_entry'))\r\n            },\r\n            'minecraft:set_count': {\r\n                count: Reference('number_provider'),\r\n                add: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_damage': {\r\n                damage: Reference('number_provider'),\r\n                add: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_enchantments': {\r\n                enchantments: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }), Reference('number_provider')),\r\n                add: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_loot_table': {\r\n                type: StringNode({ validator: 'resource', params: { pool: 'block_entity_type' } }),\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                seed: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            },\r\n            'minecraft:set_lore': {\r\n                entity: (0, core_1.Opt)(entitySourceNode),\r\n                lore: (0, core_1.ListNode)(Reference('text_component')),\r\n                replace: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_name': {\r\n                entity: (0, core_1.Opt)(entitySourceNode),\r\n                name: (0, core_1.Opt)(Reference('text_component'))\r\n            },\r\n            'minecraft:set_nbt': {\r\n                tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } })\r\n            },\r\n            'minecraft:set_potion': {\r\n                id: StringNode({ validator: 'resource', params: { pool: 'potion' } })\r\n            },\r\n            'minecraft:set_stew_effect': {\r\n                effects: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                    duration: Reference('number_provider')\r\n                })))\r\n            }\r\n        };\r\n        const res = {};\r\n        collections.get('loot_function_type').forEach(f => {\r\n            res[f] = { ...cases[f], ...conditions };\r\n        });\r\n        return res;\r\n    };\r\n    exports.DimensionTypePresets = (node) => (0, core_1.ObjectOrPreset)(StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }), node, {\r\n        'minecraft:overworld': exports.DefaultDimensionType,\r\n        'minecraft:the_nether': {\r\n            name: 'minecraft:the_nether',\r\n            ultrawarm: true,\r\n            natural: false,\r\n            shrunk: true,\r\n            piglin_safe: true,\r\n            respawn_anchor_works: true,\r\n            bed_works: false,\r\n            has_raids: false,\r\n            has_skylight: false,\r\n            has_ceiling: true,\r\n            ambient_light: 0.1,\r\n            fixed_time: 18000,\r\n            logical_height: 128,\r\n            effects: 'minecraft:the_nether',\r\n            infiniburn: 'minecraft:infiniburn_nether',\r\n            min_y: 0,\r\n            height: 256,\r\n        },\r\n        'minecraft:the_end': {\r\n            name: 'minecraft:the_end',\r\n            ultrawarm: false,\r\n            natural: false,\r\n            shrunk: false,\r\n            piglin_safe: false,\r\n            respawn_anchor_works: false,\r\n            bed_works: false,\r\n            has_raids: true,\r\n            has_skylight: false,\r\n            has_ceiling: false,\r\n            ambient_light: 0,\r\n            fixed_time: 6000,\r\n            logical_height: 256,\r\n            effects: 'minecraft:the_end',\r\n            infiniburn: 'minecraft:infiniburn_end',\r\n            min_y: 0,\r\n            height: 256,\r\n        }\r\n    });\r\n    exports.NoiseSettingsPresets = (node) => (0, core_1.ObjectOrPreset)(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\r\n        'minecraft:overworld': exports.DefaultNoiseSettings,\r\n        'minecraft:nether': {\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            noise_caves_enabled: false,\r\n            deepslate_enabled: false,\r\n            ore_veins_enabled: false,\r\n            noodle_caves_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            default_block: {\r\n                Name: 'minecraft:netherrack'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:lava'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                density_factor: 0,\r\n                density_offset: -0.030078125,\r\n                top_slide: {\r\n                    target: 0.9375,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 2.5,\r\n                    size: 4,\r\n                    offset: -1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 1.0,\r\n                    y_scale: 3.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 60.0\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 0,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            },\r\n            structures: {\r\n                structures: DefaultStructureSettings,\r\n            }\r\n        },\r\n        'minecraft:end': {\r\n            bedrock_roof_position: -2147483648,\r\n            bedrock_floor_position: -2147483648,\r\n            sea_level: 0,\r\n            noise_caves_enabled: false,\r\n            deepslate_enabled: false,\r\n            ore_veins_enabled: false,\r\n            noodle_caves_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            default_block: {\r\n                Name: 'minecraft:end_stone'\r\n            },\r\n            default_fluid: {\r\n                Name: 'minecraft:air'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                island_noise_override: true,\r\n                top_slide: {\r\n                    target: -23.4375,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -0.234375,\r\n                    size: 7,\r\n                    offset: 1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 2.0,\r\n                    y_scale: 1.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 160.0\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 1,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            },\r\n            structures: {\r\n                structures: DefaultStructureSettings\r\n            }\r\n        },\r\n        'minecraft:amplified': {\r\n            bedrock_roof_position: -2147483648,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 63,\r\n            noise_caves_enabled: true,\r\n            deepslate_enabled: true,\r\n            ore_veins_enabled: true,\r\n            noodle_caves_enabled: true,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: true,\r\n            default_block: {\r\n                Name: 'minecraft:stone'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:water'\r\n            },\r\n            noise: {\r\n                min_y: -64,\r\n                height: 384,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                density_factor: 1,\r\n                density_offset: -0.51875,\r\n                amplified: true,\r\n                top_slide: {\r\n                    target: -0.078125,\r\n                    size: 2,\r\n                    offset: 8\r\n                },\r\n                bottom_slide: {\r\n                    target: 0.1171875,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                sampling: {\r\n                    xz_scale: 0.9999999814507745,\r\n                    y_scale: 0.9999999814507745,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 0,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            },\r\n            structures: {\r\n                stronghold: {\r\n                    distance: 32,\r\n                    spread: 3,\r\n                    count: 128\r\n                },\r\n                structures: DefaultStructureSettings,\r\n            },\r\n        },\r\n        'minecraft:caves': {\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            noise_caves_enabled: false,\r\n            deepslate_enabled: false,\r\n            ore_veins_enabled: false,\r\n            noodle_caves_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            default_block: {\r\n                Name: 'minecraft:stone'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:water'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                density_factor: 0,\r\n                density_offset: -0.030078125,\r\n                top_slide: {\r\n                    target: 0.9375,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 2.5,\r\n                    size: 4,\r\n                    offset: -1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 1.0,\r\n                    y_scale: 3.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 60.0\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 0,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            },\r\n            structures: {\r\n                stronghold: {\r\n                    distance: 32,\r\n                    spread: 3,\r\n                    count: 128\r\n                },\r\n                structures: DefaultStructureSettings,\r\n            }\r\n        },\r\n        'minecraft:floating_islands': {\r\n            bedrock_roof_position: -2147483648,\r\n            bedrock_floor_position: -2147483648,\r\n            sea_level: 0,\r\n            noise_caves_enabled: false,\r\n            deepslate_enabled: false,\r\n            ore_veins_enabled: false,\r\n            noodle_caves_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            default_block: {\r\n                Name: 'minecraft:stone'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:water'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                island_noise_override: true,\r\n                top_slide: {\r\n                    target: -23.4375,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -0.234375,\r\n                    size: 7,\r\n                    offset: 1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 2.0,\r\n                    y_scale: 1.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 160.0\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 1,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            },\r\n            structures: {\r\n                stronghold: {\r\n                    distance: 32,\r\n                    spread: 3,\r\n                    count: 128\r\n                },\r\n                structures: DefaultStructureSettings,\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', (0, core_1.ObjectOrList)(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: (0, Common_1.ConditionCases)()\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: (0, Common_1.DimensionTypePresets)(Reference('dimension_type')),\r\n        generator: (0, core_1.ObjectNode)({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:noise': {\r\n                    seed: (0, core_1.NumberNode)({ integer: true }),\r\n                    settings: (0, Common_1.NoiseSettingsPresets)(Reference('noise_settings')),\r\n                    biome_source: (0, core_1.ObjectNode)({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:fixed': {\r\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\r\n                            },\r\n                            'minecraft:multi_noise': {\r\n                                preset: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: ['minecraft:overworld', 'minecraft:nether'] } })),\r\n                                biomes: (0, core_1.Mod)((0, core_1.ListNode)(Reference('generator_biome')), {\r\n                                    enabled: path => path.push('preset').get() === undefined,\r\n                                    default: () => [{\r\n                                            biome: 'minecraft:plains'\r\n                                        }]\r\n                                })\r\n                            },\r\n                            'minecraft:checkerboard': {\r\n                                scale: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 62 })),\r\n                                biomes: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n                            },\r\n                            'minecraft:the_end': {\r\n                                seed: (0, core_1.NumberNode)({ integer: true })\r\n                            }\r\n                        }\r\n                    }, { category: 'predicate', disableSwitchContext: true })\r\n                },\r\n                'minecraft:flat': {\r\n                    settings: (0, core_1.ObjectNode)({\r\n                        biome: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n                        lakes: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                        features: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                        layers: (0, core_1.ListNode)(Reference('generator_layer')),\r\n                        structures: Reference('generator_structures')\r\n                    })\r\n                }\r\n            }\r\n        }, { disableSwitchContext: true })\r\n    }, { category: 'pool', context: 'dimension' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                type: 'minecraft:overworld',\r\n                generator: {\r\n                    type: 'minecraft:noise',\r\n                    seed,\r\n                    biome_source: {\r\n                        type: 'minecraft:fixed',\r\n                        seed,\r\n                        biome: 'minecraft:plains'\r\n                    },\r\n                    settings: 'minecraft:overworld'\r\n                }\r\n            };\r\n        }\r\n    }));\r\n    const ClimateParameter = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)({ min: -2, max: 2 }),\r\n            change: (v) => { var _a; return (_a = v[0]) !== null && _a !== void 0 ? _a : 0; }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)((0, core_1.NumberNode)({ min: -2, max: 2 }), { minLength: 2, maxLength: 2 }),\r\n            change: (v) => [v !== null && v !== void 0 ? v : 0, v !== null && v !== void 0 ? v : 0]\r\n        }\r\n    ]);\r\n    schemas.register('generator_biome', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\r\n        parameters: (0, core_1.ObjectNode)({\r\n            temperature: ClimateParameter,\r\n            humidity: ClimateParameter,\r\n            continentalness: ClimateParameter,\r\n            erosion: ClimateParameter,\r\n            weirdness: ClimateParameter,\r\n            depth: ClimateParameter,\r\n            offset: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n        })\r\n    }, { context: 'generator_biome' }), {\r\n        default: () => ({\r\n            biome: 'minecraft:plains',\r\n            parameters: {\r\n                altitude: 0,\r\n                temperature: 0,\r\n                humidity: 0,\r\n                weirdness: 0,\r\n                offset: 0\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initDimensionSchemas = initDimensionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionTypeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension_type', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        ultrawarm: (0, core_1.BooleanNode)(),\r\n        natural: (0, core_1.BooleanNode)(),\r\n        piglin_safe: (0, core_1.BooleanNode)(),\r\n        respawn_anchor_works: (0, core_1.BooleanNode)(),\r\n        bed_works: (0, core_1.BooleanNode)(),\r\n        has_raids: (0, core_1.BooleanNode)(),\r\n        has_skylight: (0, core_1.BooleanNode)(),\r\n        has_ceiling: (0, core_1.BooleanNode)(),\r\n        coordinate_scale: (0, core_1.NumberNode)({ min: 0.00001, max: 30000000 }),\r\n        ambient_light: (0, core_1.NumberNode)(),\r\n        fixed_time: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n        logical_height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }),\r\n        effects: (0, core_1.Opt)(StringNode({ enum: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] })),\r\n        infiniburn: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n        min_y: (0, core_1.NumberNode)({ integer: true, min: -2048, max: 2047 }),\r\n        height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 })\r\n    }, { context: 'dimension_type' }), node => ({\r\n        default: () => Common_1.DefaultDimensionType,\r\n        validate: (path, value, errors, options) => {\r\n            value = node.validate(path, value, errors, options);\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) + (value === null || value === void 0 ? void 0 : value.height) > 2047) {\r\n                errors.add(path.push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.logical_height) > (value === null || value === void 0 ? void 0 : value.height)) {\r\n                errors.add(path.push('logical_height'), 'error.logical_height');\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.height) % 16 !== 0) {\r\n                errors.add(path.push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) % 16 !== 0) {\r\n                errors.add(path.push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n}\r\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initItemModifierSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initItemModifierSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('item_modifier', (0, core_1.ObjectOrList)(Reference('function'), { choiceContext: 'function' }));\r\n    const conditions = {\r\n        conditions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('condition')))\r\n    };\r\n    schemas.register('function', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        function: StringNode({ validator: 'resource', params: { pool: 'loot_function_type' } }),\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: (0, Common_1.FunctionCases)(conditions)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => [{\r\n                function: 'minecraft:set_count',\r\n                count: 1\r\n            }]\r\n    }));\r\n}\r\nexports.initItemModifierSchemas = initItemModifierSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_banner_pattern', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return (0, core_1.SwitchNode)(cases);\r\n    }\r\n    const conditionIDSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionIDSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: (0, core_1.Opt)(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.Mod)((0, core_1.ObjectNode)({\r\n            rolls: Reference('number_provider'),\r\n            bonus_rolls: (0, core_1.Opt)(Reference('number_provider')),\r\n            entries: (0, core_1.ListNode)(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true, min: 1 }), weightMod)),\r\n        quality: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), weightMod)),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: (0, core_1.ListNode)(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: (0, core_1.ListNode)(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: (0, core_1.ListNode)(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        function: functionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: (0, Common_1.FunctionCases)(conditions, copySourceSwtichNode, entitySourceSwtichNode)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        condition: conditionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: (0, Common_1.ConditionCases)(entitySourceSwtichNode)\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Reference('number_provider'),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        id: (0, core_1.Opt)(StringNode({ validator: 'uuid' })),\r\n        slot: (0, core_1.StringOrList)(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst CURRENT_PACK_FORMAT = 8;\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        pack: (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n            pack_format: (0, core_1.Mod)((0, core_1.NumberNode)({ integer: true, min: CURRENT_PACK_FORMAT, max: CURRENT_PACK_FORMAT }), {\r\n                default: () => CURRENT_PACK_FORMAT,\r\n                canUpdate: (_p, v) => v !== CURRENT_PACK_FORMAT,\r\n                update: () => [{ name: 'pack_format', params: [CURRENT_PACK_FORMAT], newValue: CURRENT_PACK_FORMAT }]\r\n            }),\r\n            description: (0, core_1.Reference)(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                max: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: (0, core_1.BooleanNode)(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', (0, core_1.ObjectNode)({\r\n        items: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'item' } }))),\r\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: Reference('int_bounds'),\r\n        durability: Reference('int_bounds'),\r\n        potion: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: (0, core_1.Opt)((0, core_1.ListNode)(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', (0, core_1.ObjectNode)({\r\n        enchantment: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: Reference('int_bounds')\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', (0, core_1.ObjectNode)({\r\n        blocks: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'block' } }))),\r\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', (0, core_1.ObjectNode)({\r\n        fluid: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    schemas.register('location_predicate', (0, core_1.ObjectNode)({\r\n        position: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            x: Reference('float_bounds'),\r\n            y: Reference('float_bounds'),\r\n            z: Reference('float_bounds')\r\n        })),\r\n        biome: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        feature: (0, core_1.Opt)(StringNode({ enum: collections.get('worldgen/structure_feature').map(v => v.slice(10)) })),\r\n        dimension: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n        light: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            light: Reference('int_bounds')\r\n        })),\r\n        smokey: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        block: (0, core_1.Opt)(Reference('block_predicate')),\r\n        fluid: (0, core_1.Opt)(Reference('fluid_predicate'))\r\n    }, { context: 'location' }));\r\n    schemas.register('statistic_predicate', (0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Reference('int_bounds'),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', (0, core_1.ObjectNode)({\r\n        gamemode: (0, core_1.Opt)(StringNode({ enum: 'gamemode' })),\r\n        level: Reference('int_bounds'),\r\n        advancements: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), (0, core_1.ChoiceNode)([\r\n            { type: 'boolean', node: (0, core_1.BooleanNode)(), change: _ => true },\r\n            {\r\n                type: 'object', node: (0, core_1.MapNode)(StringNode(), (0, core_1.BooleanNode)())\r\n            }\r\n        ]))),\r\n        recipes: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), (0, core_1.BooleanNode)())),\r\n        stats: (0, core_1.Opt)((0, core_1.ListNode)(Reference('statistic_predicate'))),\r\n        looking_at: (0, core_1.Opt)(Reference('entity_predicate'))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', (0, core_1.ObjectNode)({\r\n        amplifier: Reference('int_bounds'),\r\n        duration: Reference('int_bounds'),\r\n        ambient: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        visible: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', (0, core_1.ObjectNode)({\r\n        x: Reference('float_bounds'),\r\n        y: Reference('float_bounds'),\r\n        z: Reference('float_bounds'),\r\n        absolute: Reference('float_bounds'),\r\n        horizontal: Reference('float_bounds')\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', (0, core_1.ObjectNode)({\r\n        type: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: (0, core_1.Opt)(StringNode({ validator: 'team' })),\r\n        location: (0, core_1.Opt)(Reference('location_predicate')),\r\n        stepping_on: (0, core_1.Opt)(Reference('location_predicate')),\r\n        distance: (0, core_1.Opt)(Reference('distance_predicate')),\r\n        flags: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            is_on_fire: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            is_sneaking: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            is_sprinting: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            is_swimming: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            is_baby: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n        })),\r\n        equipment: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        vehicle: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        passenger: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        targeted_entity: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        player: (0, core_1.Opt)(Reference('player_predicate')),\r\n        lightning_bolt: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            blocks_set_on_fire: (0, core_1.Opt)(Reference('int_bounds')),\r\n            entity_struck: (0, core_1.Opt)(Reference('entity_predicate'))\r\n        })),\r\n        fishing_hook: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            in_open_water: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n        })),\r\n        catType: (0, core_1.Opt)(StringNode({ enum: 'cat_texture' })),\r\n        effects: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', (0, core_1.ObjectNode)({\r\n        is_explosion: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        is_fire: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        is_magic: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        is_projectile: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        is_lightning: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        bypasses_armor: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        bypasses_invulnerability: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        bypasses_magic: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        source_entity: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        direct_entity: (0, core_1.Opt)(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', (0, core_1.ObjectNode)({\r\n        dealt: Reference('float_bounds'),\r\n        taken: Reference('float_bounds'),\r\n        blocked: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        source_entity: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        type: (0, core_1.Opt)(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: (0, core_1.Opt)(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: (0, core_1.ListNode)(StringNode()),\r\n                key: (0, core_1.MapNode)(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredients: (0, core_1.ListNode)(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: (0, core_1.NumberNode)({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        item: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        replace: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        values: (0, core_1.ListNode)((0, core_1.ChoiceNode)([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: (0, core_1.ObjectNode)({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: (0, core_1.BooleanNode)()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('game_event_tag', TagBase('game_event'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\r\n    schemas.register('text_component', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: (0, core_1.BooleanNode)(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    const CommonFields = {\r\n        color: (0, core_1.Opt)(StringNode()) /* TODO */,\r\n        font: (0, core_1.Opt)(StringNode()),\r\n        bold: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        italic: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        underlined: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        strikethrough: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        obfuscated: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        insertion: (0, core_1.Opt)(StringNode()),\r\n        clickEvent: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: (0, core_1.Opt)(Reference('text_component')),\r\n                    contents: (0, core_1.Opt)(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\r\n                    contents: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                        count: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        tag: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\r\n                    }))\r\n                },\r\n                'show_entity': {\r\n                    value: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                        name: (0, core_1.Opt)(StringNode()),\r\n                        type: (0, core_1.Opt)(StringNode()),\r\n                        id: (0, core_1.Opt)(StringNode())\r\n                    })),\r\n                    contents: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.ObjectNode)({\r\n                        name: (0, core_1.Opt)(Reference('text_component')),\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n                        id: StringNode({ validator: 'uuid' })\r\n                    }), {\r\n                        default: () => ({\r\n                            type: 'minecraft:pig',\r\n                            id: '00000001-0001-0001-0001-000000000001'\r\n                        })\r\n                    }))\r\n                }\r\n            }\r\n        })),\r\n        extra: (0, core_1.Opt)(Reference('text_component_list'))\r\n    };\r\n    schemas.register('text_component_object', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'text',\r\n            match: v => typeof v === 'object',\r\n            change: v => ({ text: '' }),\r\n            priority: -1,\r\n            node: (0, core_1.ObjectNode)({\r\n                text: StringNode(),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'translation',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\r\n            change: v => ({ translate: '' }),\r\n            node: (0, core_1.ObjectNode)({\r\n                translate: StringNode(),\r\n                with: (0, core_1.Opt)(Reference('text_component_list')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'score',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\r\n            change: v => ({ score: {} }),\r\n            node: (0, core_1.ObjectNode)({\r\n                score: (0, core_1.ObjectNode)({\r\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n                    objective: StringNode({ validator: 'objective' }),\r\n                    value: (0, core_1.Opt)(StringNode())\r\n                }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'selector',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\r\n            change: v => ({ selector: '' }),\r\n            node: (0, core_1.ObjectNode)({\r\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\r\n                separator: (0, core_1.Opt)(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'keybind',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\r\n            change: v => ({ keybind: '' }),\r\n            node: (0, core_1.ObjectNode)({\r\n                keybind: StringNode({ enum: 'keybind', additional: true }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'nbt',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\r\n            change: v => ({ nbt: '' }),\r\n            node: (0, core_1.ObjectNode)({\r\n                nbt: StringNode({ validator: 'nbt_path' }),\r\n                block: (0, core_1.Opt)(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\r\n                entity: (0, core_1.Opt)(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\r\n                storage: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\r\n                interpret: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                separator: (0, core_1.Opt)(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        }\r\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', (0, core_1.Mod)((0, core_1.ListNode)(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBiomeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBiomeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('biome', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        temperature: (0, core_1.NumberNode)(),\r\n        downfall: (0, core_1.NumberNode)(),\r\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\r\n        temperature_modifier: (0, core_1.Opt)(StringNode({ enum: ['none', 'frozen'] })),\r\n        category: StringNode({ enum: 'biome_category' }),\r\n        creature_spawn_probability: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n        effects: (0, core_1.ObjectNode)({\r\n            sky_color: (0, core_1.NumberNode)({ color: true }),\r\n            fog_color: (0, core_1.NumberNode)({ color: true }),\r\n            water_color: (0, core_1.NumberNode)({ color: true }),\r\n            water_fog_color: (0, core_1.NumberNode)({ color: true }),\r\n            grass_color: (0, core_1.Opt)((0, core_1.NumberNode)({ color: true })),\r\n            foliage_color: (0, core_1.Opt)((0, core_1.NumberNode)({ color: true })),\r\n            grass_color_modifier: (0, core_1.Opt)(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\r\n            ambient_sound: (0, core_1.Opt)(StringNode()),\r\n            mood_sound: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                sound: StringNode(),\r\n                tick_delay: (0, core_1.NumberNode)({ integer: true }),\r\n                block_search_extent: (0, core_1.NumberNode)({ integer: true }),\r\n                offset: (0, core_1.NumberNode)()\r\n            })),\r\n            additions_sound: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                sound: StringNode(),\r\n                tick_chance: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            })),\r\n            music: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                sound: StringNode(),\r\n                min_delay: (0, core_1.NumberNode)({ integer: true, min: 0 }),\r\n                max_delay: (0, core_1.NumberNode)({ integer: true, min: 0 }),\r\n                replace_current_music: (0, core_1.BooleanNode)()\r\n            })),\r\n            particle: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                options: (0, core_1.ObjectNode)({\r\n                    type: StringNode()\r\n                }),\r\n                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            }))\r\n        }),\r\n        spawners: (0, core_1.MapNode)(StringNode({ enum: [\r\n                'monster',\r\n                'creature',\r\n                'ambient',\r\n                'axolotls',\r\n                'underground_water_creature',\r\n                'water_creature',\r\n                'water_ambient',\r\n                'misc'\r\n            ] }), (0, core_1.Mod)((0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n            weight: (0, core_1.NumberNode)({ integer: true }),\r\n            minCount: (0, core_1.NumberNode)({ integer: true }),\r\n            maxCount: (0, core_1.NumberNode)({ integer: true })\r\n        })), {\r\n            category: () => 'pool',\r\n            default: () => [{\r\n                    type: 'minecraft:bat',\r\n                    weight: 1\r\n                }]\r\n        })),\r\n        spawn_costs: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n            energy_budget: (0, core_1.NumberNode)(),\r\n            charge: (0, core_1.NumberNode)()\r\n        }, { category: 'function' }), {\r\n            default: () => ({\r\n                energy_budget: 0.12,\r\n                charge: 1.0\r\n            })\r\n        })),\r\n        carvers: (0, core_1.MapNode)(StringNode({ enum: ['air', 'liquid'] }), (0, core_1.Mod)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_carver' } })), {\r\n            default: () => ['minecraft:cave']\r\n        })),\r\n        features: (0, core_1.ListNode)((0, core_1.Mod)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$worldgen/placed_feature' } })), { category: () => 'predicate' }), { maxLength: 11 })\r\n    }, { context: 'biome' }), {\r\n        default: () => ({\r\n            temperature: 0.8,\r\n            downfall: 0.4,\r\n            precipitation: 'rain',\r\n            category: 'plains',\r\n            effects: {\r\n                sky_color: 7907327,\r\n                fog_color: 12638463,\r\n                water_color: 4159204,\r\n                water_fog_color: 329011\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initBiomeSchemas = initBiomeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCarverSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initCarverSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const CanyonConfig = {\r\n        vertical_rotation: (0, Common_1.FloatProvider)(),\r\n        shape: (0, core_1.ObjectNode)({\r\n            distance_factor: (0, Common_1.FloatProvider)(),\r\n            thickness: (0, Common_1.FloatProvider)(),\r\n            width_smoothness: (0, core_1.NumberNode)({ integer: true, min: 0 }),\r\n            horizontal_radius_factor: (0, Common_1.FloatProvider)(),\r\n            vertical_radius_default_factor: (0, core_1.NumberNode)(),\r\n            vertical_radius_center_factor: (0, core_1.NumberNode)()\r\n        })\r\n    };\r\n    const CaveConfig = {\r\n        horizontal_radius_multiplier: (0, Common_1.FloatProvider)(),\r\n        vertical_radius_multiplier: (0, Common_1.FloatProvider)(),\r\n        floor_level: (0, Common_1.FloatProvider)({ min: -1, max: 1 }),\r\n    };\r\n    schemas.register('configured_carver', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\r\n        config: (0, core_1.ObjectNode)({\r\n            probability: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n            y: Reference('height_provider'),\r\n            yScale: (0, Common_1.FloatProvider)(),\r\n            lava_level: Reference('vertical_anchor'),\r\n            debug_settings: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                debug_mode: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                air_state: (0, core_1.Opt)(Reference('block_state')),\r\n                water_state: (0, core_1.Opt)(Reference('block_state')),\r\n                lava_state: (0, core_1.Opt)(Reference('block_state')),\r\n                barrier_state: (0, core_1.Opt)(Reference('block_state'))\r\n            })),\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:canyon': CanyonConfig,\r\n                'minecraft:cave': CaveConfig,\r\n                'minecraft:nether_cave': CaveConfig\r\n            },\r\n        })\r\n    }, { context: 'carver' }), {\r\n        default: () => ({\r\n            type: 'minecraft:cave',\r\n            config: {\r\n                probability: 0.1\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initCarverSchemas = initCarverSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDecoratorSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initDecoratorSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('decorator', (0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/placement_modifier_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_predicate_filter': {\r\n                predicate: Reference('block_predicate_worldgen')\r\n            },\r\n            'minecraft:carving_mask': {\r\n                step: StringNode({ enum: 'generation_step' })\r\n            },\r\n            'minecraft:rarity_filter': {\r\n                chance: (0, core_1.NumberNode)({ integer: true, min: 0 })\r\n            },\r\n            'minecraft:count': {\r\n                count: (0, Common_1.IntProvider)({ min: 0, max: 256 })\r\n            },\r\n            'minecraft:count_on_every_layer': {\r\n                count: (0, Common_1.IntProvider)({ min: 0, max: 256 })\r\n            },\r\n            'minecraft:noise_threshold_count': {\r\n                noise_level: (0, core_1.NumberNode)(),\r\n                below_noise: (0, core_1.NumberNode)({ integer: true }),\r\n                above_noise: (0, core_1.NumberNode)({ integer: true })\r\n            },\r\n            'minecraft:noise_based_count': {\r\n                noise_to_count_ratio: (0, core_1.NumberNode)({ integer: true }),\r\n                noise_factor: (0, core_1.NumberNode)(),\r\n                noise_offset: (0, core_1.Opt)((0, core_1.NumberNode)())\r\n            },\r\n            'minecraft:environment_scan': {\r\n                direction_of_search: StringNode({ enum: ['up', 'down'] }),\r\n                max_steps: (0, core_1.NumberNode)({ integer: true, min: 1, max: 32 }),\r\n                target_condition: Reference('block_predicate_worldgen'),\r\n                allowed_search_condition: (0, core_1.Opt)(Reference('block_predicate_worldgen'))\r\n            },\r\n            'minecraft:heightmap': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' })\r\n            },\r\n            'minecraft:height_range': {\r\n                height: Reference('height_provider')\r\n            },\r\n            'minecraft:random_offset': {\r\n                xz_spread: (0, Common_1.IntProvider)({ min: -16, max: 16 }),\r\n                y_spread: (0, Common_1.IntProvider)({ min: -16, max: 16 }),\r\n            },\r\n            'minecraft:surface_relative_threshold_filter': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                min_inclusive: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                max_inclusive: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            },\r\n            'minecraft:surface_water_depth_filter': {\r\n                max_water_depth: (0, core_1.NumberNode)({ integer: true })\r\n            }\r\n        }\r\n    }, { context: 'decorator', category: 'predicate' }));\r\n}\r\nexports.initDecoratorSchemas = initDecoratorSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initProcessorListSchemas = exports.Processors = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initProcessorListSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    exports.Processors = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\r\n            change: v => undefined\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('processor_list'),\r\n            change: v => ({\r\n                processors: [{\r\n                        \"processor_type\": \"minecraft:nop\"\r\n                    }]\r\n            })\r\n        }\r\n    ]);\r\n    schemas.register('processor_list', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        processors: (0, core_1.ListNode)(Reference('processor'))\r\n    }, { context: 'processor_list' }), {\r\n        default: () => ({\r\n            processors: [{\r\n                    processor_type: 'minecraft:rule',\r\n                    rules: [{\r\n                            location_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            },\r\n                            input_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            }\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\r\n        [core_1.Switch]: [{ push: 'processor_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_age': {\r\n                mossiness: (0, core_1.NumberNode)()\r\n            },\r\n            'minecraft:block_ignore': {\r\n                blocks: (0, core_1.ListNode)(Reference('block_state'))\r\n            },\r\n            'minecraft:block_rot': {\r\n                integrity: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:gravity': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                offset: (0, core_1.NumberNode)({ integer: true })\r\n            },\r\n            'minecraft:protected_blocks': {\r\n                value: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            },\r\n            'minecraft:rule': {\r\n                rules: (0, core_1.ListNode)(Reference('processor_rule'))\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'processor' }), {\r\n        default: () => ({\r\n            processor_type: 'minecraft:rule',\r\n            rules: [{\r\n                    location_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    },\r\n                    input_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    }\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor_rule', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        position_predicate: (0, core_1.Opt)(Reference('pos_rule_test')),\r\n        location_predicate: Reference('rule_test'),\r\n        input_predicate: Reference('rule_test'),\r\n        output_state: Reference('block_state'),\r\n        output_nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\r\n    }, { category: 'predicate', context: 'processor_rule' }), {\r\n        default: () => ({\r\n            location_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            },\r\n            input_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            }\r\n        })\r\n    }));\r\n    const posTestFields = {\r\n        min_dist: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 255, integer: true })),\r\n        max_dist: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 255, integer: true })),\r\n        min_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n        max_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 }))\r\n    };\r\n    schemas.register('pos_rule_test', (0, core_1.ObjectNode)({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:axis_aligned_linear_pos': {\r\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\r\n                ...posTestFields\r\n            },\r\n            'minecraft:linear_pos': posTestFields\r\n        }\r\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\r\n    schemas.register('rule_test', (0, core_1.ObjectNode)({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:blockstate_match': {\r\n                block_state: Reference('block_state')\r\n            },\r\n            'minecraft:random_block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:random_blockstate_match': {\r\n                block_state: Reference('block_state'),\r\n                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:tag_match': {\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            }\r\n        }\r\n    }, { context: 'rule_test', disableSwitchContext: true }));\r\n}\r\nexports.initProcessorListSchemas = initProcessorListSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nrequire(\"./Decorator\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initFeatureSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const ConfiguredFeature = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('configured_feature')\r\n        }\r\n    ], { choiceContext: 'feature' });\r\n    const PlacedFeature = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/placed_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('placed_feature')\r\n        }\r\n    ], { choiceContext: 'placed_feature' });\r\n    const RandomPatchConfig = {\r\n        tries: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 })),\r\n        xz_spread: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0 })),\r\n        y_spread: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0 })),\r\n        feature: PlacedFeature,\r\n    };\r\n    const DiskConfig = {\r\n        state: Reference('block_state'),\r\n        radius: (0, Common_1.IntProvider)({ min: 0, max: 8 }),\r\n        half_height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4 }),\r\n        targets: (0, core_1.ListNode)(Reference('block_state'))\r\n    };\r\n    const HugeMushroomConfig = {\r\n        cap_provider: Reference('block_state_provider'),\r\n        stem_provider: Reference('block_state_provider'),\r\n        foliage_radius: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n    };\r\n    const TargetBlockState = (0, core_1.ObjectNode)({\r\n        target: Reference('rule_test'),\r\n        state: Reference('block_state')\r\n    });\r\n    const OreConfig = {\r\n        size: (0, core_1.NumberNode)({ integer: true, min: 0, max: 64 }),\r\n        discard_chance_on_air_exposure: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n        targets: (0, core_1.ListNode)(TargetBlockState)\r\n    };\r\n    const VegetationPatchConfig = {\r\n        surface: StringNode({ enum: 'cave_surface' }),\r\n        depth: (0, Common_1.IntProvider)({ min: 1, max: 128 }),\r\n        vertical_range: (0, core_1.NumberNode)({ integer: true, min: 1, max: 256 }),\r\n        extra_bottom_block_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n        extra_edge_column_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n        vegetation_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n        xz_radius: (0, Common_1.IntProvider)(),\r\n        replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n        ground_state: Reference('block_state_provider'),\r\n        vegetation_feature: PlacedFeature\r\n    };\r\n    schemas.register('configured_feature', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\r\n        config: (0, core_1.ObjectNode)({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bamboo': {\r\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:basalt_columns': {\r\n                    reach: (0, Common_1.IntProvider)({ min: 0, max: 3 }),\r\n                    height: (0, Common_1.IntProvider)({ min: 1, max: 10 })\r\n                },\r\n                'minecraft:block_column': {\r\n                    direction: StringNode({ enum: ['up', 'down', 'north', 'east', 'south', 'west'] }),\r\n                    allowed_placement: Reference('block_predicate_worldgen'),\r\n                    prioritize_tip: (0, core_1.BooleanNode)(),\r\n                    layers: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                        height: (0, Common_1.IntProvider)({ min: 0 }),\r\n                        provider: Reference('block_state_provider')\r\n                    }))\r\n                },\r\n                'minecraft:block_pile': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:delta_feature': {\r\n                    contents: Reference('block_state'),\r\n                    rim: Reference('block_state'),\r\n                    size: (0, Common_1.IntProvider)({ min: 0, max: 16 }),\r\n                    rim_size: (0, Common_1.IntProvider)({ min: 0, max: 16 })\r\n                },\r\n                'minecraft:disk': DiskConfig,\r\n                'minecraft:dripstone_cluster': {\r\n                    floor_to_ceiling_search_range: (0, core_1.NumberNode)({ integer: true, min: 1, max: 512 }),\r\n                    height: (0, Common_1.IntProvider)({ min: 0, max: 128 }),\r\n                    radius: (0, Common_1.IntProvider)({ min: 0, max: 128 }),\r\n                    max_stalagmite_stalactite_height_diff: (0, core_1.NumberNode)({ integer: true, min: 0, max: 64 }),\r\n                    height_deviation: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    dripstone_block_layer_thickness: (0, Common_1.IntProvider)({ min: 0, max: 128 }),\r\n                    density: (0, Common_1.FloatProvider)({ min: 0, max: 2 }),\r\n                    wetness: (0, Common_1.FloatProvider)({ min: 0, max: 2 }),\r\n                    chance_of_dripstone_column_at_max_distance_from_center: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                    max_distance_from_edge_affecting_chance_of_dripstone_column: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    max_distance_from_center_affecting_height_bias: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 })\r\n                },\r\n                'minecraft:end_gateway': {\r\n                    exact: (0, core_1.BooleanNode)(),\r\n                    exit: (0, core_1.Opt)(Reference('block_pos'))\r\n                },\r\n                'minecraft:end_spike': {\r\n                    crystal_invulnerable: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    crystal_beam_target: (0, core_1.Opt)(Reference('block_pos')),\r\n                    spikes: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                        centerX: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        centerZ: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        radius: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        height: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        guarded: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n                    }))\r\n                },\r\n                'minecraft:fill_layer': {\r\n                    state: Reference('block_state'),\r\n                    height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 255 })\r\n                },\r\n                'minecraft:flower': RandomPatchConfig,\r\n                'minecraft:forest_rock': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:fossil': {\r\n                    max_empty_corners_allowed: (0, core_1.NumberNode)({ integer: true, min: 0, max: 7 }),\r\n                    fossil_structures: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    overlay_structures: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    fossil_processors: ProcessorList_1.Processors,\r\n                    overlay_processors: ProcessorList_1.Processors,\r\n                },\r\n                'minecraft:geode': {\r\n                    blocks: (0, core_1.ObjectNode)({\r\n                        filling_provider: Reference('block_state_provider'),\r\n                        inner_layer_provider: Reference('block_state_provider'),\r\n                        alternate_inner_layer_provider: Reference('block_state_provider'),\r\n                        middle_layer_provider: Reference('block_state_provider'),\r\n                        outer_layer_provider: Reference('block_state_provider'),\r\n                        inner_placements: (0, core_1.ListNode)(Reference('block_state')),\r\n                        cannot_replace: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n                        invalid_blocks: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n                    }),\r\n                    layers: (0, core_1.ObjectNode)({\r\n                        filling: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\r\n                        inner_layer: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\r\n                        middle_layer: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\r\n                        outer_layer: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\r\n                    }),\r\n                    crack: (0, core_1.ObjectNode)({\r\n                        generate_crack_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                        base_crack_size: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 5 })),\r\n                        crack_point_offset: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 10 })),\r\n                    }),\r\n                    noise_multiplier: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    use_potential_placements_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    use_alternate_layer0_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    placements_require_layer0_alternate: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    outer_wall_distance: (0, core_1.Opt)((0, Common_1.IntProvider)({ min: 1, max: 20 })),\r\n                    distribution_points: (0, core_1.Opt)((0, Common_1.IntProvider)({ min: 1, max: 20 })),\r\n                    point_offset: (0, core_1.Opt)((0, Common_1.IntProvider)({ min: 0, max: 10 })),\r\n                    min_gen_offset: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                    max_gen_offset: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                    invalid_blocks_threshold: (0, core_1.NumberNode)({ integer: true })\r\n                },\r\n                'minecraft:glow_lichen': {\r\n                    search_range: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 1, max: 64, integer: true })),\r\n                    chance_of_spreading: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    can_place_on_floor: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    can_place_on_ceiling: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    can_place_on_wall: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    can_be_placed_on: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\r\n                'minecraft:huge_fungus': {\r\n                    hat_state: Reference('block_state'),\r\n                    decor_state: Reference('block_state'),\r\n                    stem_state: Reference('block_state'),\r\n                    valid_base_block: Reference('block_state'),\r\n                    planted: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n                },\r\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\r\n                'minecraft:ice_patch': DiskConfig,\r\n                'minecraft:iceberg': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:lake': {\r\n                    fluid: Reference('block_state_provider'),\r\n                    barrier: Reference('block_state_provider')\r\n                },\r\n                'minecraft:large_dripstone': {\r\n                    floor_to_ceiling_search_range: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1, max: 512 })),\r\n                    column_radius: (0, Common_1.IntProvider)({ min: 0, max: 60 }),\r\n                    height_scale: (0, Common_1.FloatProvider)({ min: 0, max: 20 }),\r\n                    max_column_radius_to_cave_height_ratio: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                    stalactite_bluntness: (0, Common_1.FloatProvider)({ min: 0.1, max: 10 }),\r\n                    stalagmite_bluntness: (0, Common_1.FloatProvider)({ min: 0.1, max: 10 }),\r\n                    wind_speed: (0, Common_1.FloatProvider)({ min: 0, max: 2 }),\r\n                    min_radius_for_wind: (0, core_1.NumberNode)({ integer: true, min: 0, max: 100 }),\r\n                    min_bluntness_for_wind: (0, core_1.NumberNode)({ min: 0, max: 5 })\r\n                },\r\n                'minecraft:nether_forest_vegetation': {\r\n                    state_provider: Reference('block_state_provider'),\r\n                    spread_width: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                    spread_height: (0, core_1.NumberNode)({ integer: true, min: 1 })\r\n                },\r\n                'minecraft:netherrack_replace_blobs': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state'),\r\n                    radius: (0, Common_1.IntProvider)({ min: 0, max: 12 })\r\n                },\r\n                'minecraft:no_bonemeal_flower': RandomPatchConfig,\r\n                'minecraft:ore': OreConfig,\r\n                'minecraft:pointed_dripstone': {\r\n                    chance_of_taller_dripstone: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    chance_of_directional_spread: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    chance_of_spread_radius2: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    chance_of_spread_radius3: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                },\r\n                'minecraft:random_patch': RandomPatchConfig,\r\n                'minecraft:random_boolean_selector': {\r\n                    feature_false: PlacedFeature,\r\n                    feature_true: PlacedFeature\r\n                },\r\n                'minecraft:random_selector': {\r\n                    features: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                        chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                        feature: PlacedFeature\r\n                    })),\r\n                    default: PlacedFeature\r\n                },\r\n                'minecraft:replace_single_block': {\r\n                    targets: (0, core_1.ListNode)(TargetBlockState)\r\n                },\r\n                'minecraft:root_system': {\r\n                    required_vertical_space_for_tree: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    root_radius: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    root_placement_attempts: (0, core_1.NumberNode)({ integer: true, min: 1, max: 256 }),\r\n                    root_column_max_height: (0, core_1.NumberNode)({ integer: true, min: 1, max: 4096 }),\r\n                    hanging_root_radius: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    hanging_roots_vertical_span: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }),\r\n                    hanging_root_placement_attempts: (0, core_1.NumberNode)({ integer: true, min: 0, max: 256 }),\r\n                    allowed_vertical_water_for_tree: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    root_replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n                    root_state_provider: Reference('block_state_provider'),\r\n                    hanging_root_state_provider: Reference('block_state_provider'),\r\n                    allowed_tree_position: Reference('block_predicate_worldgen'),\r\n                    feature: PlacedFeature\r\n                },\r\n                'minecraft:scattered_ore': OreConfig,\r\n                'minecraft:sea_pickle': {\r\n                    count: (0, Common_1.IntProvider)({ min: 0, max: 256 })\r\n                },\r\n                'minecraft:seagrass': {\r\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:simple_block': {\r\n                    to_place: Reference('block_state_provider')\r\n                },\r\n                'minecraft:simple_random_selector': {\r\n                    features: (0, core_1.ListNode)(PlacedFeature)\r\n                },\r\n                'minecraft:spring_feature': {\r\n                    state: Reference('fluid_state'),\r\n                    rock_count: (0, core_1.NumberNode)({ integer: true }),\r\n                    hole_count: (0, core_1.NumberNode)({ integer: true }),\r\n                    requires_block_below: (0, core_1.BooleanNode)(),\r\n                    valid_blocks: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:tree': {\r\n                    ignore_vines: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    force_dirt: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    minimum_size: Reference('feature_size'),\r\n                    dirt_provider: Reference('block_state_provider'),\r\n                    trunk_provider: Reference('block_state_provider'),\r\n                    foliage_provider: Reference('block_state_provider'),\r\n                    trunk_placer: (0, core_1.ObjectNode)({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\r\n                        base_height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 32 }),\r\n                        height_rand_a: (0, core_1.NumberNode)({ integer: true, min: 0, max: 24 }),\r\n                        height_rand_b: (0, core_1.NumberNode)({ integer: true, min: 0, max: 24 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:bending_trunk_placer': {\r\n                                bend_length: (0, Common_1.IntProvider)({ min: 1, max: 64 }),\r\n                                min_height_for_leaves: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\r\n                            }\r\n                        }\r\n                    }, { context: 'trunk_placer' }),\r\n                    foliage_placer: (0, core_1.ObjectNode)({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\r\n                        radius: (0, Common_1.IntProvider)({ min: 0, max: 16 }),\r\n                        offset: (0, Common_1.IntProvider)({ min: 0, max: 16 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:blob_foliage_placer': {\r\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:bush_foliage_placer': {\r\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:fancy_foliage_placer': {\r\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:jungle_foliage_placer': {\r\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:mega_pine_foliage_placer': {\r\n                                crown_height: (0, Common_1.IntProvider)({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:pine_foliage_placer': {\r\n                                height: (0, Common_1.IntProvider)({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:random_spread_foliage_placer': {\r\n                                foliage_height: (0, Common_1.IntProvider)({ min: 1, max: 512 }),\r\n                                leaf_placement_attempts: (0, core_1.NumberNode)({ integer: true, min: 0, max: 256 })\r\n                            },\r\n                            'minecraft:spruce_foliage_placer': {\r\n                                trunk_height: (0, Common_1.IntProvider)({ min: 0, max: 24 })\r\n                            }\r\n                        }\r\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\r\n                    decorators: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:alter_ground': {\r\n                                provider: Reference('block_state_provider')\r\n                            },\r\n                            'minecraft:beehive': {\r\n                                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:cocoa': {\r\n                                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                            }\r\n                        }\r\n                    }, { context: 'tree_decorator' }))\r\n                },\r\n                'minecraft:twisting_vines': {\r\n                    spread_width: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                    spread_height: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                    max_height: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                },\r\n                'minecraft:underwater_magma': {\r\n                    floor_search_range: (0, core_1.NumberNode)({ integer: true, min: 0, max: 512 }),\r\n                    placement_radius_around_floor: (0, core_1.NumberNode)({ integer: true, min: 0, max: 64 }),\r\n                    placement_probability_per_valid_position: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:vegetation_patch': VegetationPatchConfig,\r\n                'minecraft:waterlogged_vegetation_patch': VegetationPatchConfig\r\n            }\r\n        }, { context: 'feature' })\r\n    }, { context: 'feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:tree',\r\n            config: {\r\n                minimum_size: {\r\n                    type: 'minecraft:two_layers_feature_size'\r\n                },\r\n                trunk_placer: {\r\n                    type: 'minecraft:straight_trunk_placer',\r\n                    base_height: 5,\r\n                    height_rand_a: 2,\r\n                    height_rand_b: 0\r\n                },\r\n                foliage_placer: {\r\n                    type: 'minecraft:blob_foliage_placer',\r\n                    radius: 2,\r\n                    offset: 0,\r\n                    height: 3\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('placed_feature', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        feature: ConfiguredFeature,\r\n        placement: (0, core_1.ListNode)(Reference('decorator'))\r\n    }, { context: 'placed_feature' }), {\r\n        default: () => ({\r\n            feature: 'minecraft:oak',\r\n            placement: [\r\n                {\r\n                    type: 'minecraft:count',\r\n                    count: 4\r\n                },\r\n                {\r\n                    type: 'minecraft:in_square'\r\n                },\r\n                {\r\n                    type: 'minecraft:heightmap',\r\n                    heightmap: 'OCEAN_FLOOR'\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('feature_size', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\r\n        min_clipped_height: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 80 })),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:two_layers_feature_size': {\r\n                limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 81 })),\r\n                lower_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })),\r\n                upper_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }))\r\n            },\r\n            'minecraft:three_layers_feature_size': {\r\n                limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 80 })),\r\n                upper_limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 80 })),\r\n                lower_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })),\r\n                middle_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })),\r\n                upper_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }))\r\n            }\r\n        }\r\n    }, { disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:two_layers_feature_size'\r\n        })\r\n    }));\r\n    const NoiseProvider = {\r\n        seed: (0, core_1.NumberNode)({ integer: true }),\r\n        noise: Reference('noise_parameters'),\r\n        scale: (0, core_1.Mod)((0, core_1.NumberNode)({ min: Number.MIN_VALUE }), { default: () => 1 })\r\n    };\r\n    schemas.register('block_state_provider', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:dual_noise_provider': {\r\n                ...NoiseProvider,\r\n                variety: (0, Common_1.InclusiveRange)({ integer: true, min: 1, max: 64 }),\r\n                slow_noise: Reference('noise_parameters'),\r\n                slow_scale: (0, core_1.Mod)((0, core_1.NumberNode)({ min: Number.MIN_VALUE }), { default: () => 1 }),\r\n                states: (0, core_1.ListNode)(Reference('block_state'))\r\n            },\r\n            'minecraft:noise_threshold_provider': {\r\n                ...NoiseProvider,\r\n                threshold: (0, core_1.NumberNode)({ min: -1, max: 1 }),\r\n                high_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                default_state: Reference('block_state'),\r\n                low_states: (0, core_1.ListNode)(Reference('block_state')),\r\n                high_states: (0, core_1.ListNode)(Reference('block_state'))\r\n            },\r\n            'minecraft:noise_provider': {\r\n                ...NoiseProvider,\r\n                states: (0, core_1.ListNode)(Reference('block_state'))\r\n            },\r\n            'minecraft:randomized_int_state_provider': {\r\n                property: StringNode(),\r\n                values: (0, Common_1.IntProvider)(),\r\n                source: Reference('block_state_provider')\r\n            },\r\n            'minecraft:rotated_block_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:simple_state_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:weighted_state_provider': {\r\n                entries: (0, core_1.ListNode)((0, core_1.Mod)((0, core_1.ObjectNode)({\r\n                    weight: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                    data: Reference('block_state')\r\n                }), {\r\n                    default: () => ({\r\n                        data: {}\r\n                    })\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_state_provider'\r\n        })\r\n    }));\r\n    const Offset = {\r\n        offset: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.NumberNode)({ integer: true, min: -16, max: 16 }), { minLength: 3, maxLength: 3 }))\r\n    };\r\n    schemas.register('block_predicate_worldgen', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'block_predicate_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:all_of': {\r\n                predicates: (0, core_1.ListNode)(Reference('block_predicate_worldgen'))\r\n            },\r\n            'minecraft:any_of': {\r\n                predicates: (0, core_1.ListNode)(Reference('block_predicate_worldgen'))\r\n            },\r\n            'minecraft:has_sturdy_face': {\r\n                ...Offset,\r\n                direction: StringNode({ enum: 'direction' })\r\n            },\r\n            'minecraft:inside_world_bounds': {\r\n                ...Offset,\r\n            },\r\n            'minecraft:matching_block_tag': {\r\n                ...Offset,\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            },\r\n            'minecraft:matching_blocks': {\r\n                ...Offset,\r\n                blocks: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n            },\r\n            'minecraft:matching_fluids': {\r\n                ...Offset,\r\n                fluids: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'fluid' } }))\r\n            },\r\n            'minecraft:not': {\r\n                predicate: Reference('block_predicate_worldgen')\r\n            },\r\n            'minecraft:would_survive': {\r\n                ...Offset,\r\n                state: Reference('block_state')\r\n            }\r\n        }\r\n    }, { context: 'block_predicate' }), {\r\n        default: () => ({\r\n            type: 'minecraft:true'\r\n        })\r\n    }));\r\n}\r\nexports.initFeatureSchemas = initFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initNoiseSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initNoiseSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('noise_settings', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        sea_level: (0, core_1.NumberNode)({ integer: true }),\r\n        disable_mob_generation: (0, core_1.BooleanNode)(),\r\n        noise_caves_enabled: (0, core_1.BooleanNode)(),\r\n        noodle_caves_enabled: (0, core_1.BooleanNode)(),\r\n        aquifers_enabled: (0, core_1.BooleanNode)(),\r\n        ore_veins_enabled: (0, core_1.BooleanNode)(),\r\n        legacy_random_source: (0, core_1.BooleanNode)(),\r\n        default_block: Reference('block_state'),\r\n        default_fluid: Reference('block_state'),\r\n        noise: (0, core_1.ObjectNode)({\r\n            min_y: (0, core_1.NumberNode)({ integer: true, min: -2048, max: 2047 }),\r\n            height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }),\r\n            size_horizontal: (0, core_1.NumberNode)({ integer: true }),\r\n            size_vertical: (0, core_1.NumberNode)({ integer: true }),\r\n            island_noise_override: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            amplified: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            large_biomes: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            sampling: (0, core_1.ObjectNode)({\r\n                xz_scale: (0, core_1.NumberNode)(),\r\n                y_scale: (0, core_1.NumberNode)(),\r\n                xz_factor: (0, core_1.NumberNode)(),\r\n                y_factor: (0, core_1.NumberNode)()\r\n            }),\r\n            bottom_slide: Reference('noise_slider'),\r\n            top_slide: Reference('noise_slider'),\r\n            terrain_shaper: Reference('terrain_shaper')\r\n        }),\r\n        surface_rule: Reference('material_rule'),\r\n        structures: Reference('generator_structures')\r\n    }, { context: 'noise_settings' }), node => ({\r\n        default: () => Common_1.DefaultNoiseSettings,\r\n        validate: (path, value, errors, options) => {\r\n            var _a, _b, _c, _d;\r\n            value = node.validate(path, value, errors, options);\r\n            if (((_a = value === null || value === void 0 ? void 0 : value.noise) === null || _a === void 0 ? void 0 : _a.min_y) + ((_b = value === null || value === void 0 ? void 0 : value.noise) === null || _b === void 0 ? void 0 : _b.height) > 2047) {\r\n                errors.add(path.push('noise').push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if (((_c = value === null || value === void 0 ? void 0 : value.noise) === null || _c === void 0 ? void 0 : _c.height) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if (((_d = value === null || value === void 0 ? void 0 : value.noise) === null || _d === void 0 ? void 0 : _d.min_y) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n    schemas.register('noise_slider', (0, core_1.ObjectNode)({\r\n        target: (0, core_1.NumberNode)(),\r\n        size: (0, core_1.NumberNode)({ integer: true, min: 0 }),\r\n        offset: (0, core_1.NumberNode)({ integer: true })\r\n    }));\r\n    schemas.register('generator_structures', (0, core_1.ObjectNode)({\r\n        stronghold: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            distance: (0, core_1.NumberNode)({ integer: true, min: 0, max: 1023 }),\r\n            spread: (0, core_1.NumberNode)({ integer: true, min: 0, max: 1023 }),\r\n            count: (0, core_1.NumberNode)({ integer: true, min: 1, max: 4095 })\r\n        })),\r\n        structures: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }), (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n            spacing: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }),\r\n            separation: (0, core_1.Mod)((0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }), (node) => ({\r\n                validate: (path, value, errors, options) => {\r\n                    if (path.pop().push('spacing').get() <= value) {\r\n                        errors.add(path, 'error.separation_smaller_spacing');\r\n                    }\r\n                    return node.validate(path, value, errors, options);\r\n                }\r\n            })),\r\n            salt: (0, core_1.NumberNode)({ integer: true, min: 0 })\r\n        }, { context: 'generator_structure' }), {\r\n            default: () => ({\r\n                spacing: 10,\r\n                separation: 5,\r\n                salt: 0\r\n            })\r\n        }))\r\n    }));\r\n    schemas.register('generator_layer', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        height: (0, core_1.NumberNode)({ integer: true, min: 1 })\r\n    }), {\r\n        default: () => ({\r\n            block: 'minecraft:stone',\r\n            height: 1\r\n        })\r\n    }));\r\n    schemas.register('terrain_shaper', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        offset: Reference('terrain_spline'),\r\n        factor: Reference('terrain_spline'),\r\n        jaggedness: Reference('terrain_spline'),\r\n    }, { context: 'terrain_shaper' }), {\r\n        default: () => ({\r\n            offset: 0,\r\n            factor: 0,\r\n            jaggedness: 0,\r\n        })\r\n    }));\r\n    schemas.register('terrain_spline', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)()\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)({\r\n                coordinate: (0, core_1.Mod)(StringNode({ enum: ['continents', 'erosion', 'weirdness', 'ridges'] }), { default: () => 'continents' }),\r\n                points: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    location: (0, core_1.NumberNode)(),\r\n                    derivative: (0, core_1.NumberNode)(),\r\n                    value: Reference('terrain_spline')\r\n                }))\r\n            }, { category: 'function' })\r\n        }\r\n    ], { context: 'terrain_spline', choiceContext: 'terrain_spline' }), {\r\n        default: () => 0\r\n    }));\r\n}\r\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initStructureFeatureSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const templatePoolConfig = {\r\n        start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\r\n        size: (0, core_1.NumberNode)({ integer: true })\r\n    };\r\n    schemas.register('configured_structure_feature', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }),\r\n        config: (0, core_1.ObjectNode)({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bastion_remnant': templatePoolConfig,\r\n                'minecraft:buried_treasure': {\r\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:mineshaft': {\r\n                    type: StringNode({ enum: ['normal', 'mesa'] }),\r\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:nether_fossil': {\r\n                    height: Reference('height_provider')\r\n                },\r\n                'minecraft:ocean_ruin': {\r\n                    biome_temp: StringNode({ enum: ['cold', 'warm'] }),\r\n                    large_probability: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                    cluster_probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:pillager_outpost': templatePoolConfig,\r\n                'minecraft:ruined_portal': {\r\n                    portal_type: StringNode({ enum: ['standard', 'desert', 'jungle', 'mountain', 'nether', 'ocean', 'swamp'] })\r\n                },\r\n                'minecraft:shipwreck': {\r\n                    is_beached: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n                },\r\n                'minecraft:village': templatePoolConfig\r\n            }\r\n        }, { context: 'structure_feature', disableSwitchContext: true })\r\n    }, { context: 'structure_feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:bastion_remnant',\r\n            config: {\r\n                start_pool: 'minecraft:bastion/starts',\r\n                size: 6\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initStructureFeatureSchemas = initStructureFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSurfaceRuleSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initSurfaceRuleSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('material_rule', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/material_rule' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block': {\r\n                result_state: Reference('block_state'),\r\n            },\r\n            'minecraft:condition': {\r\n                if_true: Reference('material_condition'),\r\n                then_run: Reference('material_rule')\r\n            },\r\n            'minecraft:sequence': {\r\n                sequence: (0, core_1.ListNode)(Reference('material_rule'))\r\n            }\r\n        }\r\n    }, { context: 'material_rule', category: 'pool' }), {\r\n        default: () => ({\r\n            type: 'minecraft:block',\r\n            result_state: {\r\n                Name: 'minecraft:stone'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('material_condition', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/material_condition' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:biome': {\r\n                biome_is: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n            },\r\n            'minecraft:noise_threshold': {\r\n                noise: StringNode({ validator: 'resource', params: { pool: '$worldgen/noise' } }),\r\n                min_threshold: (0, core_1.NumberNode)(),\r\n                max_threshold: (0, core_1.NumberNode)()\r\n            },\r\n            'minecraft:not': {\r\n                invert: Reference('material_condition')\r\n            },\r\n            'minecraft:stone_depth': {\r\n                offset: (0, core_1.NumberNode)({ integer: true }),\r\n                surface_type: StringNode({ enum: 'cave_surface' }),\r\n                add_surface_depth: (0, core_1.BooleanNode)(),\r\n                add_surface_secondary_depth: (0, core_1.BooleanNode)(),\r\n            },\r\n            'minecraft:vertical_gradient': {\r\n                random_name: StringNode(),\r\n                true_at_and_below: Reference('vertical_anchor'),\r\n                false_at_and_above: Reference('vertical_anchor'),\r\n            },\r\n            'minecraft:water': {\r\n                offset: (0, core_1.NumberNode)({ integer: true }),\r\n                surface_depth_multiplier: (0, core_1.NumberNode)({ integer: true, min: -20, max: 20 }),\r\n                add_stone_depth: (0, core_1.BooleanNode)()\r\n            },\r\n            'minecraft:y_above': {\r\n                anchor: Reference('vertical_anchor'),\r\n                surface_depth_multiplier: (0, core_1.NumberNode)({ integer: true, min: -20, max: 20 }),\r\n                add_stone_depth: (0, core_1.BooleanNode)()\r\n            }\r\n        }\r\n    }, { context: 'material_condition' }), {\r\n        default: () => ({\r\n            type: 'minecraft:biome',\r\n            is_biome: 'minecraft:plains'\r\n        })\r\n    }));\r\n}\r\nexports.initSurfaceRuleSchemas = initSurfaceRuleSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTemplatePoolSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initTemplatePoolSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('template_pool', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        name: StringNode(),\r\n        fallback: StringNode(),\r\n        elements: (0, core_1.ListNode)(Reference('template_weighted_element'))\r\n    }, { context: 'template_pool' }), {\r\n        default: () => ({\r\n            fallback: 'minecraft:empty',\r\n            elements: [\r\n                {\r\n                    weight: 1,\r\n                    element: {\r\n                        element_type: 'minecraft:single_pool_element',\r\n                        projection: 'rigid',\r\n                        processors: 'minecraft:empty'\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('template_weighted_element', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        weight: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n        element: Reference('template_element')\r\n    }, { category: 'pool' }), {\r\n        default: () => ({\r\n            weight: 1,\r\n            element: {\r\n                element_type: 'minecraft:single_pool_element',\r\n                projection: 'rigid',\r\n                processors: 'minecraft:empty'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('template_element', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\r\n        projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n        [core_1.Switch]: [{ push: 'element_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:feature_pool_element': {\r\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/placed_feature' } })\r\n            },\r\n            'minecraft:legacy_single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            },\r\n            'minecraft:list_pool_element': {\r\n                elements: (0, core_1.ListNode)(Reference('template_element'))\r\n            },\r\n            'minecraft:single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            }\r\n        }\r\n    }, { context: 'template_element', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            element_type: 'minecraft:single_pool_element',\r\n            projection: 'rigid',\r\n            processors: 'minecraft:empty'\r\n        })\r\n    }));\r\n}\r\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldgenSchemas = void 0;\r\nconst Biome_1 = require(\"./Biome\");\r\nconst Carver_1 = require(\"./Carver\");\r\nconst Decorator_1 = require(\"./Decorator\");\r\nconst Feature_1 = require(\"./Feature\");\r\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nconst StructureFeature_1 = require(\"./StructureFeature\");\r\nconst SurfaceRule_1 = require(\"./SurfaceRule\");\r\nconst TemplatePool_1 = require(\"./TemplatePool\");\r\nfunction initWorldgenSchemas(schemas, collections) {\r\n    // `ProcessorList.ts` has exports. It should be initialized first. \r\n    (0, ProcessorList_1.initProcessorListSchemas)(schemas, collections);\r\n    (0, Biome_1.initBiomeSchemas)(schemas, collections);\r\n    (0, Carver_1.initCarverSchemas)(schemas, collections);\r\n    (0, Decorator_1.initDecoratorSchemas)(schemas, collections);\r\n    (0, Feature_1.initFeatureSchemas)(schemas, collections);\r\n    (0, NoiseSettings_1.initNoiseSettingsSchemas)(schemas, collections);\r\n    (0, StructureFeature_1.initStructureFeatureSchemas)(schemas, collections);\r\n    (0, SurfaceRule_1.initSurfaceRuleSchemas)(schemas, collections);\r\n    (0, TemplatePool_1.initTemplatePoolSchemas)(schemas, collections);\r\n}\r\nexports.initWorldgenSchemas = initWorldgenSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('world_settings', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        generate_features: (0, core_1.BooleanNode)(),\r\n        bonus_chest: (0, core_1.BooleanNode)(),\r\n        seed: (0, core_1.NumberNode)({ integer: true }),\r\n        dimensions: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\r\n    }, { context: 'world_settings' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                generate_features: true,\r\n                bonus_chest: false,\r\n                seed,\r\n                dimensions: {\r\n                    'minecraft:overworld': {\r\n                        type: 'minecraft:overworld',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                preset: \"minecraft:overworld\"\r\n                            },\r\n                            settings: 'minecraft:overworld',\r\n                        }\r\n                    },\r\n                    'minecraft:the_nether': {\r\n                        type: 'minecraft:the_nether',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                preset: \"minecraft:nether\"\r\n                            },\r\n                            settings: 'minecraft:nether'\r\n                        }\r\n                    },\r\n                    'minecraft:the_end': {\r\n                        type: \"minecraft:the_end\",\r\n                        generator: {\r\n                            type: \"minecraft:noise\",\r\n                            seed,\r\n                            biome_source: {\r\n                                type: \"minecraft:the_end\",\r\n                                seed\r\n                            },\r\n                            settings: \"minecraft:end\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }));\r\n}\r\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst assets_1 = require(\"./assets\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst Dimension_1 = require(\"./Dimension\");\r\nconst DimensionType_1 = require(\"./DimensionType\");\r\nconst ItemModifier_1 = require(\"./ItemModifier\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nconst worldgen_1 = require(\"./worldgen\");\r\nconst WorldSettings_1 = require(\"./WorldSettings\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` is the only file that has exports. It should be initialized first. \r\n    (0, Common_1.initCommonSchemas)(schemas, collections);\r\n    (0, Advancement_1.initAdvancementSchemas)(schemas, collections);\r\n    (0, assets_1.initAssetsSchemas)(schemas, collections);\r\n    (0, Condition_1.initConditionSchemas)(schemas, collections);\r\n    (0, DimensionType_1.initDimensionTypeSchemas)(schemas, collections);\r\n    (0, Dimension_1.initDimensionSchemas)(schemas, collections);\r\n    (0, ItemModifier_1.initItemModifierSchemas)(schemas, collections);\r\n    (0, LootTable_1.initLootTableSchemas)(schemas, collections);\r\n    (0, PackMcmeta_1.initPackMcmetaSchemas)(schemas, collections);\r\n    (0, Predicates_1.initPredicatesSchemas)(schemas, collections);\r\n    (0, Recipe_1.initRecipeSchemas)(schemas, collections);\r\n    (0, Tags_1.initTagsSchemas)(schemas, collections);\r\n    (0, TextComponent_1.initTextComponentSchemas)(schemas, collections);\r\n    (0, worldgen_1.initWorldgenSchemas)(schemas, collections);\r\n    (0, WorldSettings_1.initWorldSettingsSchemas)(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = exports.lootContext = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    (0, Collections_1.initCollections)(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    (0, schemas_1.initSchemas)(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n"],"names":["core_1","require$$0","require$$1","require$$2","Common_1","ProcessorList_1","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","this"],"mappings":"+1BACA,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EACrC,GAAA,gBAAG,OAC1B,YAAyB,EAAa,CAClC,EAAY,SAAS,sBAAuB,CACxC,+BACA,yBACA,0BACA,8BACA,gCACA,6BACA,yBACA,kCACA,4BACA,2BACA,wBACA,+BACA,iCACA,6BACA,0BACA,+BACA,gCACA,uBACA,8BACA,oCACA,+BACA,+BACA,uBACA,6BACA,qBACA,0BACA,yBACA,4CACA,+BACA,0CACA,iCACA,4BACA,gCACA,0BACA,yBACA,6BACA,2BACA,4BACA,wBACA,uBACA,iBACA,4CACA,2BACA,uBACA,uBACA,2BACA,2BACR,CAAK,EACD,EAAY,SAAS,UAAW,CAC5B,mBACA,aACA,WACA,WACA,cACA,WACA,cACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,WACA,WACA,2BACA,eACA,iBACA,YACA,2BACA,iBACA,mBACA,YACA,wBACA,aACA,kBACA,wBACA,SACR,CAAK,EACD,EAAY,SAAS,OAAQ,CACzB,WACA,UACA,OACA,QACA,OACA,MACR,CAAK,EACD,EAAY,SAAS,WAAY,CAC7B,WACA,WACA,YACA,WACR,CAAK,EACD,EAAY,SAAS,gBAAiB,CAClC,OACA,SACA,gBACA,eACR,CAAK,EACD,EAAY,SAAS,cAAe,CAChC,eACA,OACA,SACA,eACR,CAAK,EACD,EAAY,SAAS,iCAAkC,CACnD,gCACA,sCACA,qBACR,CAAK,EACD,EAAY,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,cACR,CAAK,EACD,EAAY,SAAS,cAAe,CAChC,kBACA,kBACA,iBACA,UACA,WACA,QACA,iBACA,UACA,YACA,WACA,gBACA,aACA,mBACA,gBACA,YACA,aACA,YACA,SACR,CAAK,EACD,EAAY,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,iBACR,CAAK,EACD,EAAY,SAAS,iBAAkB,CACnC,QACA,SACA,gBACA,SACA,MACA,SACA,OACA,WACA,WACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,QACA,UACA,aACR,CAAK,EACD,EAAY,SAAS,iBAAkB,CACnC,kBACA,4BACA,cACA,iBACA,gBACA,kBACR,CAAK,EACD,EAAY,SAAS,kBAAmB,CACpC,MACA,QACR,CAAK,EACD,EAAY,SAAS,oBAAqB,CACtC,kBACA,kBACA,oBACA,qBACA,oBACA,mBACA,iBACA,mBACA,+BACA,+BACA,oBACA,iBACR,CAAK,EACD,EAAY,SAAS,iBAAkB,CACnC,OACA,qBACA,sBACA,kBACA,mBACA,gBACA,aACA,cACA,eACA,gBACA,gBACA,mBACA,kBACA,gBACA,QACA,iBACA,kBACA,eACA,mBACA,gBACA,gBACA,oBACA,mBACA,iBACA,SACA,UACA,gBACA,kBACA,sBACA,yBACA,SACA,eACA,WACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,QACR,CAAK,EACD,EAAY,SAAS,YAAa,CAC9B,QACA,SACA,UACA,aACA,SACA,OACA,OACA,OACA,aACA,OACA,SACA,OACA,QACA,QACA,MACA,OACR,CAAK,EACD,EAAY,SAAS,eAAgB,CACjC,QACA,SACR,CAAK,EACD,EAAY,SAAS,YAAa,CAC9B,OACA,KACA,QACA,OACA,QACA,MACR,CAAK,EACD,EAAY,SAAS,OAAQ,CACzB,IACA,IACA,GACR,CAAK,EACD,EAAY,SAAS,mBAAoB,CACrC,wBACA,uBACA,wBACA,uBACA,MACA,OACA,SACA,OACR,CAAK,EACD,EAAY,SAAS,YAAa,CAC9B,QACA,MACR,CAAK,EA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"}