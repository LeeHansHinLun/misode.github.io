{"version":3,"file":"yaml.e8f3b9ab.js","sources":["../../node_modules/brace/mode/yaml.js"],"sourcesContent":["ace.define(\"ace/mode/yaml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar YamlHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"#.*$\"\n            }, {\n                token : \"list.markup\",\n                regex : /^(?:-{3}|\\.{3})\\s*(?=#|$)/\n            },  {\n                token : \"list.markup\",\n                regex : /^\\s*[\\-?](?:$|\\s)/\n            }, {\n                token: \"constant\",\n                regex: \"!![\\\\w//]+\"\n            }, {\n                token: \"constant.language\",\n                regex: \"[&\\\\*][a-zA-Z0-9-_]+\"\n            }, {\n                token: [\"meta.tag\", \"keyword\"],\n                regex: /^(\\s*\\w.*?)(:(?=\\s|$))/\n            },{\n                token: [\"meta.tag\", \"keyword\"],\n                regex: /(\\w+?)(\\s*:(?=\\s|$))/\n            }, {\n                token : \"keyword.operator\",\n                regex : \"<<\\\\w*:\\\\w*\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"-\\\\s*(?=[{])\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // multi line string start\n                regex : /[|>][-+\\d\\s]*$/,\n                onMatch: function(val, state, stack, line) {\n                    var indent = /^\\s*/.exec(line)[0];\n                    if (stack.length < 1) {\n                        stack.push(this.next);\n                    } else {\n                        stack[0] = \"mlString\";\n                    }\n\n                    if (stack.length < 2) {\n                        stack.push(indent.length);\n                    }\n                    else {\n                        stack[1] = indent.length;\n                    }\n                    return this.token;\n                },\n                next : \"mlString\"\n            }, {\n                token : \"string\", // single quoted string\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : /(\\b|[+\\-\\.])[\\d_]+(?:(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)(?=[^\\d-\\w]|$)/\n            }, {\n                token : \"constant.numeric\", // other number\n                regex : /[+\\-]?\\.inf\\b|NaN\\b|0x[\\dA-Fa-f_]+|0b[10_]+/\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"\\\\b(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : /[^\\s,:\\[\\]\\{\\}]+/\n            }\n        ],\n        \"mlString\" : [\n            {\n                token : \"indent\",\n                regex : /^\\s*$/\n            }, {\n                token : \"indent\",\n                regex : /^\\s*/,\n                onMatch: function(val, state, stack) {\n                    var curIndent = stack[1];\n\n                    if (curIndent >= val.length) {\n                        this.next = \"start\";\n                        stack.splice(0);\n                    }\n                    else {\n                        this.next = \"mlString\";\n                    }\n                    return this.token;\n                },\n                next : \"mlString\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ]};\n    this.normalizeRules();\n\n};\n\noop.inherits(YamlHighlightRules, TextHighlightRules);\n\nexports.YamlHighlightRules = YamlHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/yaml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/yaml_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/coffee\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar YamlHighlightRules = acequire(\"./yaml_highlight_rules\").YamlHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = YamlHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = [\"#\", \"//\"];\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n\n    this.$id = \"ace/mode/yaml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"],"names":[],"mappings":"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"}